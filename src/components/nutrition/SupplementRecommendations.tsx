import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { 
  Pill, 
  Clock, 
  AlertTriangle, 
  ShoppingCart,
  Heart,
  Brain,
  Shield,
  Calendar,
  CheckCircle,
  XCircle,
  Info,
  ExternalLink
} from 'lucide-react';
import type { SupplementRecommendation, UserProfile } from '@/services/nutritionAnalyzer';

interface SupplementRecommendationsProps {
  supplements: SupplementRecommendation[];
  userProfile: UserProfile;
  className?: string;
}

interface SupplementSchedule {
  supplement: SupplementRecommendation;
  timeSlots: string[];
  reminderTime: string;
  isActive: boolean;
}

export const SupplementRecommendations: React.FC<SupplementRecommendationsProps> = ({
  supplements,
  userProfile,
  className = ""
}) => {
  const [selectedSupplements, setSelectedSupplements] = useState<SupplementSchedule[]>([]);
  const [showInteractionWarning, setShowInteractionWarning] = useState(false);

  const getFormIcon = (form: string) => {
    switch (form) {
      case 'tablet': return 'üíä';
      case 'capsule': return 'üîò';
      case 'liquid': return 'üß™';
      case 'powder': return 'ü•Ñ';
      default: return 'üíä';
    }
  };

  const getTimingIcon = (timing: string) => {
    if (timing.includes('—É—Ç—Ä–æ–º') || timing.includes('–£—Ç—Ä–æ–º')) return 'üåÖ';
    if (timing.includes('–≤–µ—á–µ—Ä–æ–º') || timing.includes('–í–µ—á–µ—Ä–æ–º')) return 'üåô';
    if (timing.includes('–¥–Ω–µ–º') || timing.includes('–æ–±–µ–¥')) return '‚òÄÔ∏è';
    return 'üïê';
  };

  const addToSchedule = (supplement: SupplementRecommendation) => {
    const timeSlots = generateTimeSlots(supplement.timing);
    const newSchedule: SupplementSchedule = {
      supplement,
      timeSlots,
      reminderTime: timeSlots[0] || '09:00',
      isActive: true
    };

    setSelectedSupplements(prev => [...prev, newSchedule]);
    checkInteractions([...selectedSupplements, newSchedule]);
  };

  const removeFromSchedule = (supplementName: string) => {
    setSelectedSupplements(prev => 
      prev.filter(schedule => schedule.supplement.name !== supplementName)
    );
  };

  const generateTimeSlots = (timing: string): string[] => {
    if (timing.includes('—É—Ç—Ä–æ–º') || timing.includes('–£—Ç—Ä–æ–º')) return ['08:00'];
    if (timing.includes('–≤–µ—á–µ—Ä–æ–º') || timing.includes('–í–µ—á–µ—Ä–æ–º')) return ['20:00'];
    if (timing.includes('—Å –µ–¥–æ–π')) return ['08:00', '13:00', '19:00'];
    if (timing.includes('–Ω–∞—Ç–æ—â–∞–∫')) return ['07:00'];
    return ['09:00'];
  };

  const checkInteractions = (schedules: SupplementSchedule[]) => {
    const hasInteractions = schedules.some(schedule => 
      schedule.supplement.interactions.length > 0
    );
    setShowInteractionWarning(hasInteractions);
  };

  const getDailyTotal = () => {
    return selectedSupplements.length;
  };

  const getMonthlyEstimate = () => {
    // –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ —Ä—É–±–ª—è—Ö
    const baseCost = selectedSupplements.length * 800; // —Å—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ë–ê–î –≤ –º–µ—Å—è—Ü
    return baseCost;
  };

  const isSupplementSelected = (supplementName: string) => {
    return selectedSupplements.some(schedule => 
      schedule.supplement.name === supplementName
    );
  };

  return (
    <div className={`space-y-6 ${className}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <Card className="bg-gradient-to-br from-background via-primary/5 to-accent/10 border-primary/10 shadow-elegant rounded-2xl">
        <CardHeader>
          <CardTitle className="text-xl font-playfair text-foreground flex items-center gap-2">
            <Pill className="h-6 w-6 text-primary" />
            –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ë–ê–î
          </CardTitle>
          <p className="text-sm text-muted-foreground">
            –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –¥–æ–±–∞–≤–æ–∫ –¥–ª—è {userProfile.name} ({userProfile.menopausePhase})
          </p>
        </CardHeader>
        
        {selectedSupplements.length > 0 && (
          <CardContent>
            <div className="grid grid-cols-3 gap-4 text-center">
              <div className="bg-gradient-to-br from-background/80 to-accent/5 p-3 rounded-xl border border-primary/10">
                <div className="text-lg font-bold text-foreground">{getDailyTotal()}</div>
                <div className="text-xs text-muted-foreground">–ë–ê–î –≤ –¥–µ–Ω—å</div>
              </div>
              <div className="bg-gradient-to-br from-background/80 to-accent/5 p-3 rounded-xl border border-primary/10">
                <div className="text-lg font-bold text-foreground">{getMonthlyEstimate()}‚ÇΩ</div>
                <div className="text-xs text-muted-foreground">–í –º–µ—Å—è—Ü</div>
              </div>
              <div className="bg-gradient-to-br from-background/80 to-accent/5 p-3 rounded-xl border border-primary/10">
                <div className="text-lg font-bold text-foreground">
                  {selectedSupplements.filter(s => s.supplement.monitoringNeeded).length}
                </div>
                <div className="text-xs text-muted-foreground">–¢—Ä–µ–±—É–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—è</div>
              </div>
            </div>
          </CardContent>
        )}
      </Card>

      {/* –°–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {supplements.map((supplement, index) => (
          <Card 
            key={index}
            className="bg-gradient-to-br from-card/90 to-accent/5 backdrop-blur-sm border-primary/10 shadow-soft rounded-2xl hover:shadow-floating transition-all duration-300"
          >
            <CardHeader className="pb-3">
              <div className="flex items-start justify-between">
                <div className="flex-1">
                  <CardTitle className="text-base font-playfair text-foreground flex items-center gap-2">
                    <span className="text-lg">{getFormIcon(supplement.form)}</span>
                    {supplement.name}
                  </CardTitle>
                  <p className="text-sm text-muted-foreground mt-1">
                    {supplement.dosage}
                  </p>
                </div>
                {supplement.monitoringNeeded && (
                  <Badge variant="outline" className="text-xs border-orange-200 bg-orange-50 text-orange-800">
                    <Calendar className="h-3 w-3 mr-1" />
                    –ö–æ–Ω—Ç—Ä–æ–ª—å
                  </Badge>
                )}
              </div>
            </CardHeader>

            <CardContent className="space-y-4">
              {/* –í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ */}
              <div className="flex items-center gap-2 text-sm">
                <span className="text-lg">{getTimingIcon(supplement.timing)}</span>
                <div>
                  <span className="font-medium text-foreground">–í—Ä–µ–º—è –ø—Ä–∏–µ–º–∞:</span>
                  <br />
                  <span className="text-muted-foreground">{supplement.timing}</span>
                </div>
              </div>

              {/* –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
              <div className="flex items-center gap-2 text-sm">
                <Clock className="h-4 w-4 text-primary" />
                <div>
                  <span className="font-medium text-foreground">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
                  <span className="text-muted-foreground ml-1">{supplement.duration}</span>
                </div>
              </div>

              {/* –° –µ–¥–æ–π –∏–ª–∏ –±–µ–∑ */}
              <div className="flex items-center gap-2 text-sm">
                {supplement.withFood ? (
                  <>
                    <CheckCircle className="h-4 w-4 text-green-600" />
                    <span className="text-muted-foreground">–ü—Ä–∏–Ω–∏–º–∞—Ç—å —Å –µ–¥–æ–π</span>
                  </>
                ) : (
                  <>
                    <XCircle className="h-4 w-4 text-red-600" />
                    <span className="text-muted-foreground">–ü—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∞—Ç–æ—â–∞–∫</span>
                  </>
                )}
              </div>

              {/* –ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è */}
              {supplement.contraindications.length > 0 && (
                <div className="bg-red-50 p-3 rounded-lg border border-red-200">
                  <div className="flex items-center gap-2 mb-1">
                    <AlertTriangle className="h-4 w-4 text-red-600" />
                    <span className="text-sm font-medium text-red-800">–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è</span>
                  </div>
                  <p className="text-xs text-red-700">
                    {supplement.contraindications.join(', ')}
                  </p>
                </div>
              )}

              {/* –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è */}
              {supplement.interactions.length > 0 && (
                <div className="bg-yellow-50 p-3 rounded-lg border border-yellow-200">
                  <div className="flex items-center gap-2 mb-1">
                    <Info className="h-4 w-4 text-yellow-600" />
                    <span className="text-sm font-medium text-yellow-800">–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è</span>
                  </div>
                  <p className="text-xs text-yellow-700">
                    {supplement.interactions.join(', ')}
                  </p>
                </div>
              )}

              {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
              <div className="flex gap-2">
                {!isSupplementSelected(supplement.name) ? (
                  <Button
                    onClick={() => addToSchedule(supplement)}
                    className="flex-1 bg-gradient-to-r from-primary to-accent hover:from-primary/90 hover:to-accent/90"
                    size="sm"
                  >
                    <Pill className="h-4 w-4 mr-2" />
                    –î–æ–±–∞–≤–∏—Ç—å –≤ –ø–ª–∞–Ω
                  </Button>
                ) : (
                  <Button
                    onClick={() => removeFromSchedule(supplement.name)}
                    variant="outline"
                    className="flex-1"
                    size="sm"
                  >
                    <CheckCircle className="h-4 w-4 mr-2" />
                    –í –ø–ª–∞–Ω–µ
                  </Button>
                )}
                
                <Button
                  variant="outline"
                  size="sm"
                  className="px-3"
                >
                  <ShoppingCart className="h-4 w-4" />
                </Button>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∏–µ–º–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ë–ê–î) */}
      {selectedSupplements.length > 0 && (
        <Card className="bg-gradient-to-br from-secondary/10 to-accent/10 border-secondary/20 shadow-elegant rounded-2xl">
          <CardHeader>
            <CardTitle className="text-lg font-playfair text-foreground flex items-center gap-2">
              <Calendar className="h-5 w-5 text-secondary" />
              –í–∞—à –ø–ª–∞–Ω –ø—Ä–∏–µ–º–∞ –ë–ê–î
            </CardTitle>
          </CardHeader>
          
          <CardContent>
            <div className="space-y-3">
              {selectedSupplements.map((schedule, index) => (
                <div 
                  key={index}
                  className="flex items-center justify-between p-3 bg-background/50 rounded-xl border border-border/50"
                >
                  <div className="flex items-center gap-3">
                    <span className="text-lg">{getFormIcon(schedule.supplement.form)}</span>
                    <div>
                      <div className="font-medium text-foreground text-sm">
                        {schedule.supplement.name}
                      </div>
                      <div className="text-xs text-muted-foreground">
                        {schedule.supplement.dosage} ‚Ä¢ {schedule.timeSlots.join(', ')}
                      </div>
                    </div>
                  </div>
                  
                  <Button
                    onClick={() => removeFromSchedule(schedule.supplement.name)}
                    variant="ghost"
                    size="sm"
                    className="text-muted-foreground hover:text-foreground"
                  >
                    <XCircle className="h-4 w-4" />
                  </Button>
                </div>
              ))}
            </div>

            {showInteractionWarning && (
              <div className="mt-4 p-3 bg-orange-50 rounded-lg border border-orange-200">
                <div className="flex items-center gap-2 mb-1">
                  <AlertTriangle className="h-4 w-4 text-orange-600" />
                  <span className="text-sm font-medium text-orange-800">
                    –í–Ω–∏–º–∞–Ω–∏–µ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è–º
                  </span>
                </div>
                <p className="text-xs text-orange-700">
                  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ë–ê–î –≤ –≤–∞—à–µ–º –ø–ª–∞–Ω–µ –∏–º–µ—é—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. 
                  –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø—Ä–∏–µ–º–∞.
                </p>
              </div>
            )}
          </CardContent>
        </Card>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö —Å—Å—ã–ª–∫–∞—Ö */}
      <Card className="bg-gradient-to-r from-background/50 to-accent/5 border-border/50 shadow-soft rounded-2xl">
        <CardContent className="pt-6">
          <div className="flex items-start gap-3">
            <ExternalLink className="h-5 w-5 text-primary mt-0.5 flex-shrink-0" />
            <div>
              <h4 className="text-sm font-medium text-foreground mb-1">
                –ì–¥–µ –∫—É–ø–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ë–ê–î
              </h4>
              <p className="text-xs text-muted-foreground">
                –ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Å —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏. 
                –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ –Ω–∞—à–∏–º —Å—Å—ã–ª–∫–∞–º –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

import React from 'react';
import { cn } from '@/lib/utils';

interface SymptomEntryViewProps {
  entry: any | null;
  date: string;
  onEdit: () => void;
}

export const SymptomEntryView: React.FC<SymptomEntryViewProps> = ({
  entry,
  date,
  onEdit
}) => {
  if (!entry) {
    return (
      <div className="bloom-card p-8 text-center">
        <div className="text-6xl mb-4">üìù</div>
        <h3 className="text-xl font-semibold text-foreground mb-2">
          –ù–µ—Ç –∑–∞–ø–∏—Å–∏ –∑–∞ —ç—Ç—É –¥–∞—Ç—É
        </h3>
        <p className="text-muted-foreground mb-6">
          –°–æ–∑–¥–∞–π—Ç–µ –∑–∞–ø–∏—Å—å, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å–≤–æ–∏ —Å–∏–º–ø—Ç–æ–º—ã –∑–∞{' '}
          {new Date(date + 'T00:00:00').toLocaleDateString('ru-RU')}
        </p>
        <button
          onClick={onEdit}
          className="bg-primary text-primary-foreground px-6 py-2 rounded-lg hover:bg-primary/90 transition-colors"
        >
          –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å
        </button>
      </div>
    );
  }

  const getScaleLabel = (value: number, labels: string[]) => {
    return labels[value - 1] || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
  };

  const severityLabels = ['–õ–µ–≥–∫–∞—è', '–£–º–µ—Ä–µ–Ω–Ω–∞—è', '–°—Ä–µ–¥–Ω—è—è', '–°–∏–ª—å–Ω–∞—è', '–û—á–µ–Ω—å —Å–∏–ª—å–Ω–∞—è'];
  const moodLabels = ['–û—á–µ–Ω—å –ø–ª–æ—Ö–æ–µ', '–ü–ª–æ—Ö–æ–µ', '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ', '–•–æ—Ä–æ—à–µ–µ', '–û—Ç–ª–∏—á–Ω–æ–µ'];
  const energyLabels = ['–û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π', '–ù–∏–∑–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–í—ã—Å–æ–∫–∏–π', '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π'];

  const physicalSymptomsMap: { [key: string]: string } = {
    'headache': '–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å',
    'joint_pain': '–ë–æ–ª—å –≤ —Å—É—Å—Ç–∞–≤–∞—Ö',
    'fatigue': '–£—Å—Ç–∞–ª–æ—Å—Ç—å',
    'bloating': '–í–∑–¥—É—Ç–∏–µ',
    'breast_tenderness': '–ë–æ–ª–µ–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å –≥—Ä—É–¥–∏',
    'weight_gain': '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤–µ—Å–∞'
  };

  return (
    <div className="bloom-card p-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-playfair font-bold text-foreground">
          –ó–∞–ø–∏—Å—å –∑–∞ {new Date(entry.date + 'T00:00:00').toLocaleDateString('ru-RU')}
        </h2>
        <button
          onClick={onEdit}
          className="bg-primary text-primary-foreground px-4 py-2 rounded-lg hover:bg-primary/90 transition-colors"
        >
          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        </button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* –ü—Ä–∏–ª–∏–≤—ã */}
        <div className="bg-red-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            üî• –ü—Ä–∏–ª–∏–≤—ã
          </h3>
          <p className="text-sm text-muted-foreground">
            <strong>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</strong> {entry.hotFlashes?.count || 0}
          </p>
          <p className="text-sm text-muted-foreground">
            <strong>–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å:</strong> {getScaleLabel(entry.hotFlashes?.severity || 1, severityLabels)}
          </p>
        </div>

        {/* –ù–æ—á–Ω–∞—è –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å */}
        <div className="bg-blue-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            üí¶ –ù–æ—á–Ω–∞—è –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å
          </h3>
          <p className="text-sm text-muted-foreground">
            <strong>–ù–∞–ª–∏—á–∏–µ:</strong> {entry.nightSweats?.occurred ? '–î–∞' : '–ù–µ—Ç'}
          </p>
          {entry.nightSweats?.occurred && (
            <p className="text-sm text-muted-foreground">
              <strong>–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å:</strong> {getScaleLabel(entry.nightSweats.severity, severityLabels)}
            </p>
          )}
        </div>

        {/* –°–æ–Ω */}
        <div className="bg-purple-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            üò¥ –°–æ–Ω
          </h3>
          <p className="text-sm text-muted-foreground">
            <strong>–ß–∞—Å–æ–≤ —Å–Ω–∞:</strong> {entry.sleep?.hoursSlept || 0}
          </p>
          <p className="text-sm text-muted-foreground">
            <strong>–ö–∞—á–µ—Å—Ç–≤–æ:</strong> {getScaleLabel(entry.sleep?.quality || 3, moodLabels)}
          </p>
        </div>

        {/* –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ */}
        <div className="bg-yellow-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
          </h3>
          <p className="text-sm text-muted-foreground">
            <strong>–û–±—â–µ–µ:</strong> {getScaleLabel(entry.mood?.overall || 3, moodLabels)}
          </p>
          <p className="text-sm text-muted-foreground">
            <strong>–¢—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å:</strong> {getScaleLabel(entry.mood?.anxiety || 1, severityLabels)}
          </p>
          <p className="text-sm text-muted-foreground">
            <strong>–†–∞–∑–¥—Ä–∞–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> {getScaleLabel(entry.mood?.irritability || 1, severityLabels)}
          </p>
        </div>

        {/* –≠–Ω–µ—Ä–≥–∏—è */}
        <div className="bg-green-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            ‚ö° –≠–Ω–µ—Ä–≥–∏—è
          </h3>
          <p className="text-sm text-muted-foreground">
            <strong>–£—Ä–æ–≤–µ–Ω—å:</strong> {getScaleLabel(entry.energy || 3, energyLabels)}
          </p>
        </div>

        {/* –§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–∏–º–ø—Ç–æ–º—ã */}
        <div className="bg-orange-50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            üèÉ‚Äç‚ôÄÔ∏è –§–∏–∑–∏—á–µ—Å–∫–∏–µ —Å–∏–º–ø—Ç–æ–º—ã
          </h3>
          {entry.physicalSymptoms && entry.physicalSymptoms.length > 0 ? (
            <div className="flex flex-wrap gap-2">
              {entry.physicalSymptoms.map((symptom: string) => (
                <span key={symptom} className="bg-orange-200 text-orange-800 px-2 py-1 rounded text-xs">
                  {physicalSymptomsMap[symptom] || symptom.replace('_', ' ')}
                </span>
              ))}
            </div>
          ) : (
            <p className="text-sm text-muted-foreground">–ù–µ—Ç –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤</p>
          )}
        </div>
      </div>

      {/* –ó–∞–º–µ—Ç–∫–∏ */}
      {entry.notes && (
        <div className="mt-6 bg-muted/50 rounded-lg p-4">
          <h3 className="text-lg font-semibold text-foreground mb-3 flex items-center">
            üìù –ó–∞–º–µ—Ç–∫–∏
          </h3>
          <p className="text-foreground">{entry.notes}</p>
        </div>
      )}
    </div>
  );
};

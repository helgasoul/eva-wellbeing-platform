
import React from 'react';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { GoalsAndPriorities } from '@/types/onboarding';

interface GoalsStepProps {
  data?: GoalsAndPriorities;
  onChange: (data: GoalsAndPriorities) => void;
}

const defaultData: GoalsAndPriorities = {
  primaryConcerns: [],
  goals: [],
  preferredApproach: 'combination',
  informationPreferences: [],
  communicationFrequency: 'weekly'
};

export const GoalsStep: React.FC<GoalsStepProps> = ({ 
  data = defaultData, 
  onChange 
}) => {
  const updateField = (field: keyof GoalsAndPriorities, value: any) => {
    onChange({
      ...data,
      [field]: value
    });
  };

  const toggleArrayItem = (array: string[], item: string) => {
    return array.includes(item) 
      ? array.filter(i => i !== item)
      : [...array, item];
  };

  return (
    <div className="space-y-8">
      {/* Primary Concerns */}
      <div className="space-y-4">
        <h3 className="text-lg font-medium text-foreground">–û—Å–Ω–æ–≤–Ω—ã–µ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–∞</h3>
        <Label>–ß—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)</Label>
        <div className="grid grid-cols-2 gap-2">
          {[
            { value: 'symptom_management', label: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º–∞–º–∏' },
            { value: 'weight_control', label: '–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞' },
            { value: 'bone_health', label: '–ó–¥–æ—Ä–æ–≤—å–µ –∫–æ—Å—Ç–µ–π' },
            { value: 'heart_health', label: '–ó–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–¥—Ü–∞' }
          ].map((concern) => (
            <div key={concern.value} className="flex items-center space-x-2">
              <Checkbox
                id={concern.value}
                checked={data.primaryConcerns.includes(concern.value)}
                onCheckedChange={(checked) => {
                  const updated = toggleArrayItem(data.primaryConcerns, concern.value);
                  updateField('primaryConcerns', updated);
                }}
              />
              <Label htmlFor={concern.value}>{concern.label}</Label>
            </div>
          ))}
        </div>
      </div>

      {/* Goals */}
      <div className="space-y-4">
        <h3 className="text-lg font-medium text-foreground">–í–∞—à–∏ —Ü–µ–ª–∏</h3>
        <Label>–ß–µ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–æ—Å—Ç–∏—á—å? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)</Label>
        <div className="space-y-2">
          {[
            { value: 'reduce_hot_flashes', label: '–£–º–µ–Ω—å—à–∏—Ç—å –ø—Ä–∏–ª–∏–≤—ã' },
            { value: 'improve_sleep', label: '–£–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞' },
            { value: 'maintain_weight', label: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—ã–π –≤–µ—Å' },
            { value: 'prevent_diseases', label: '–ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è' },
            { value: 'improve_mood', label: '–£–ª—É—á—à–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ' },
            { value: 'increase_energy', label: '–ü–æ–≤—ã—Å–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏' }
          ].map((goal) => (
            <div key={goal.value} className="flex items-center space-x-2">
              <Checkbox
                id={goal.value}
                checked={data.goals.includes(goal.value)}
                onCheckedChange={(checked) => {
                  const updated = toggleArrayItem(data.goals, goal.value);
                  updateField('goals', updated);
                }}
              />
              <Label htmlFor={goal.value}>{goal.label}</Label>
            </div>
          ))}
        </div>
      </div>

      {/* Preferred Approach */}
      <div className="space-y-2">
        <Label>–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –ª–µ—á–µ–Ω–∏—é</Label>
        <Select 
          value={data.preferredApproach} 
          onValueChange={(value) => updateField('preferredApproach', value)}
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="medical">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π (–ª–µ–∫–∞—Ä—Å—Ç–≤–∞, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã)</SelectItem>
            <SelectItem value="natural">–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π (–æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, —Ç—Ä–∞–≤—ã)</SelectItem>
            <SelectItem value="combination">–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Information Preferences */}
      <div className="space-y-4">
        <h3 className="text-lg font-medium text-foreground">–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</h3>
        <Label>–ö–∞–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ —Ü–µ–Ω–Ω–∞? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)</Label>
        <div className="space-y-2">
          {[
            { value: 'research_based', label: '–ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è' },
            { value: 'peer_experiences', label: '–û–ø—ã—Ç –¥—Ä—É–≥–∏—Ö –∂–µ–Ω—â–∏–Ω' },
            { value: 'doctor_advice', label: '–°–æ–≤–µ—Ç—ã –≤—Ä–∞—á–µ–π' },
            { value: 'practical_tips', label: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã' }
          ].map((pref) => (
            <div key={pref.value} className="flex items-center space-x-2">
              <Checkbox
                id={pref.value}
                checked={data.informationPreferences.includes(pref.value)}
                onCheckedChange={(checked) => {
                  const updated = toggleArrayItem(data.informationPreferences, pref.value);
                  updateField('informationPreferences', updated);
                }}
              />
              <Label htmlFor={pref.value}>{pref.label}</Label>
            </div>
          ))}
        </div>
      </div>

      {/* Communication Frequency */}
      <div className="space-y-2">
        <Label>–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏?</Label>
        <Select 
          value={data.communicationFrequency} 
          onValueChange={(value) => updateField('communicationFrequency', value)}
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</SelectItem>
            <SelectItem value="weekly">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ</SelectItem>
            <SelectItem value="monthly">–ï–∂–µ–º–µ—Å—è—á–Ω–æ</SelectItem>
            <SelectItem value="as_needed">–ü–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Final Message */}
      <div className="text-center bg-gradient-to-r from-accent/30 to-muted rounded-lg p-6">
        <h4 className="font-medium text-primary mb-2">–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! üéâ</h4>
        <p className="text-sm text-muted-foreground">
          –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ 
          –ø–ª–∞–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∞—à–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è.
        </p>
      </div>
    </div>
  );
};


import React from 'react';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Checkbox } from '@/components/ui/checkbox';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { SeverityScale } from '@/components/onboarding/SeverityScale';
import { LifestyleInfo } from '@/types/onboarding';

interface LifestyleStepProps {
  data?: LifestyleInfo;
  onChange: (data: LifestyleInfo) => void;
}

const defaultData: LifestyleInfo = {
  exerciseFrequency: 'rarely',
  exerciseTypes: [],
  dietType: 'regular',
  smokingStatus: 'never',
  alcoholConsumption: 'rarely',
  stressLevel: 5,
  sleepHours: 7,
  supplementsUsed: []
};

export const LifestyleStep: React.FC<LifestyleStepProps> = ({ 
  data = defaultData, 
  onChange 
}) => {
  const updateField = (field: keyof LifestyleInfo, value: any) => {
    onChange({
      ...data,
      [field]: value
    });
  };

  const toggleArrayItem = (array: string[], item: string) => {
    return array.includes(item) 
      ? array.filter(i => i !== item)
      : [...array, item];
  };

  return (
    <div className="space-y-8">
      {/* Exercise Frequency */}
      <div className="space-y-4">
        <h3 className="text-lg font-medium text-foreground">–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
        <div className="space-y-2">
          <Label>–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ—Å—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏?</Label>
          <Select 
            value={data.exerciseFrequency} 
            onValueChange={(value) => updateField('exerciseFrequency', value)}
          >
            <SelectTrigger>
              <SelectValue />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="never">–ù–∏–∫–æ–≥–¥–∞</SelectItem>
              <SelectItem value="rarely">–†–µ–¥–∫–æ (–º–µ–Ω–µ–µ 1 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)</SelectItem>
              <SelectItem value="1-2_weekly">1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é</SelectItem>
              <SelectItem value="3-4_weekly">3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é</SelectItem>
              <SelectItem value="daily">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ</SelectItem>
            </SelectContent>
          </Select>
        </div>

        {data.exerciseFrequency !== 'never' && (
          <div className="space-y-3">
            <Label>–ö–∞–∫–∏–µ –≤–∏–¥—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)</Label>
            <div className="grid grid-cols-2 gap-2">
              {[
                { value: 'cardio', label: '–ö–∞—Ä–¥–∏–æ (–±–µ–≥, –≤–µ–ª–æ—Å–∏–ø–µ–¥)' },
                { value: 'strength', label: '–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏' },
                { value: 'yoga', label: '–ô–æ–≥–∞/–ø–∏–ª–∞—Ç–µ—Å' },
                { value: 'walking', label: '–ü–µ—à–∏–µ –ø—Ä–æ–≥—É–ª–∫–∏' }
              ].map((exercise) => (
                <div key={exercise.value} className="flex items-center space-x-2">
                  <Checkbox
                    id={exercise.value}
                    checked={data.exerciseTypes.includes(exercise.value)}
                    onCheckedChange={(checked) => {
                      const updated = toggleArrayItem(data.exerciseTypes, exercise.value);
                      updateField('exerciseTypes', updated);
                    }}
                  />
                  <Label htmlFor={exercise.value}>{exercise.label}</Label>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>

      {/* Diet Type */}
      <div className="space-y-2">
        <Label>–¢–∏–ø –ø–∏—Ç–∞–Ω–∏—è</Label>
        <Select 
          value={data.dietType} 
          onValueChange={(value) => updateField('dietType', value)}
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="regular">–û–±—ã—á–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ</SelectItem>
            <SelectItem value="vegetarian">–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ</SelectItem>
            <SelectItem value="vegan">–í–µ–≥–∞–Ω—Å–∫–æ–µ</SelectItem>
            <SelectItem value="keto">–ö–µ—Ç–æ-–¥–∏–µ—Ç–∞</SelectItem>
            <SelectItem value="mediterranean">–°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—Å–∫–∞—è –¥–∏–µ—Ç–∞</SelectItem>
            <SelectItem value="other">–î—Ä—É–≥–æ–µ</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Smoking Status */}
      <div className="space-y-2">
        <Label>–ö—É—Ä–µ–Ω–∏–µ</Label>
        <Select 
          value={data.smokingStatus} 
          onValueChange={(value) => updateField('smokingStatus', value)}
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="never">–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∫—É—Ä–∏–ª–∞</SelectItem>
            <SelectItem value="former">–ë—Ä–æ—Å–∏–ª–∞ –∫—É—Ä–∏—Ç—å</SelectItem>
            <SelectItem value="current">–ö—É—Ä—é –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Alcohol Consumption */}
      <div className="space-y-2">
        <Label>–£–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è</Label>
        <Select 
          value={data.alcoholConsumption} 
          onValueChange={(value) => updateField('alcoholConsumption', value)}
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="never">–ù–∏–∫–æ–≥–¥–∞</SelectItem>
            <SelectItem value="rarely">–†–µ–¥–∫–æ (–ø–æ –æ—Å–æ–±—ã–º —Å–ª—É—á–∞—è–º)</SelectItem>
            <SelectItem value="moderate">–£–º–µ—Ä–µ–Ω–Ω–æ (1-2 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é)</SelectItem>
            <SelectItem value="frequent">–ß–∞—Å—Ç–æ (–±–æ–ª–µ–µ 3 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é)</SelectItem>
          </SelectContent>
        </Select>
      </div>

      {/* Stress Level */}
      <div className="space-y-4">
        <SeverityScale
          label="–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏"
          value={data.stressLevel}
          onChange={(value) => updateField('stressLevel', value)}
        />
      </div>

      {/* Sleep Hours */}
      <div className="space-y-2">
        <Label htmlFor="sleepHours">–°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –≤—ã —Å–ø–∏—Ç–µ –≤ —Å—Ä–µ–¥–Ω–µ–º?</Label>
        <Input
          id="sleepHours"
          type="number"
          placeholder="7"
          value={data.sleepHours}
          onChange={(e) => updateField('sleepHours', parseFloat(e.target.value))}
          min="4"
          max="12"
          step="0.5"
        />
      </div>

      {/* Supplements */}
      <div className="space-y-4">
        <h3 className="text-lg font-medium text-foreground">–î–æ–±–∞–≤–∫–∏ –∏ –≤–∏—Ç–∞–º–∏–Ω—ã</h3>
        <Label>–ö–∞–∫–∏–µ –¥–æ–±–∞–≤–∫–∏ –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)</Label>
        <div className="grid grid-cols-2 gap-2">
          {[
            '–í–∏—Ç–∞–º–∏–Ω D',
            '–ö–∞–ª—å—Ü–∏–π',
            '–ú–∞–≥–Ω–∏–π',
            '–û–º–µ–≥–∞-3',
            '–ú—É–ª—å—Ç–∏–≤–∏—Ç–∞–º–∏–Ω—ã',
            '–§–∏—Ç–æ—ç—Å—Ç—Ä–æ–≥–µ–Ω—ã'
          ].map((supplement) => (
            <div key={supplement} className="flex items-center space-x-2">
              <Checkbox
                id={supplement}
                checked={data.supplementsUsed.includes(supplement)}
                onCheckedChange={(checked) => {
                  const updated = toggleArrayItem(data.supplementsUsed, supplement);
                  updateField('supplementsUsed', updated);
                }}
              />
              <Label htmlFor={supplement}>{supplement}</Label>
            </div>
          ))}
        </div>
      </div>

      <div className="text-sm text-muted-foreground bg-eva-soft-pink/20 rounded-lg p-3">
        <p>
          üí° <strong>–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –≤–∞–∂–µ–Ω:</strong> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –ø—Ä–∏–≤—ã—á–∫–∞—Ö –ø–æ–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å 
          —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è.
        </p>
      </div>
    </div>
  );
};

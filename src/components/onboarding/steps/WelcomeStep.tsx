
import React from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Heart, Clock, CheckCircle, ArrowRight } from 'lucide-react';
import { DataBridge } from '@/services/DataBridge';

interface WelcomeStepProps {
  onNext?: () => void;
}

export const WelcomeStep: React.FC<WelcomeStepProps> = ({ onNext }) => {
  // ‚úÖ –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
  const dataBridge = DataBridge.getInstance();
  const presets = dataBridge.getOnboardingPresets();
  const analytics = dataBridge.getTransferAnalytics();
  
  return (
    <div className="max-w-2xl mx-auto text-center space-y-8">
      {/* Welcome Header */}
      <div>
        <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-bloom-dusty-rose to-bloom-mauve rounded-full mb-6">
          <Heart className="h-10 w-10 text-white" />
        </div>
        <h1 className="text-3xl font-playfair font-bold text-foreground mb-4">
          {presets ? 
            `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ bloom, ${presets.user.firstName}!` : 
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ bloom!'
          }
        </h1>
        <p className="text-lg text-muted-foreground">
          {presets ? 
            `–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∞–Ω–∫–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è "${getPersonaTitle(presets.persona.id)}"` :
            '–î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤–∞—à–µ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è'
          }
        </p>
      </div>

      {/* Process Overview */}
      <Card className="bg-white/80 backdrop-blur-sm border-bloom-dusty-rose/20">
        <CardHeader>
          <CardTitle className="flex items-center justify-center space-x-2 text-bloom-dusty-rose">
            <Clock className="h-5 w-5" />
            <span>–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç</span>
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="flex items-center space-x-3 text-left">
            <CheckCircle className="h-5 w-5 text-green-500 flex-shrink-0" />
            <div>
              <p className="font-medium">–ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤</p>
              <p className="text-sm text-muted-foreground">–û –≤–∞—à–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏</p>
            </div>
          </div>
          
          <div className="flex items-center space-x-3 text-left">
            <CheckCircle className="h-5 w-5 text-green-500 flex-shrink-0" />
            <div>
              <p className="font-medium">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</p>
              <p className="text-sm text-muted-foreground">–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–∞—à–µ–π —Ñ–∞–∑—ã –º–µ–Ω–æ–ø–∞—É–∑—ã</p>
            </div>
          </div>
          
          <div className="flex items-center space-x-3 text-left">
            <CheckCircle className="h-5 w-5 text-green-500 flex-shrink-0" />
            <div>
              <p className="font-medium">–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</p>
              <p className="text-sm text-muted-foreground">–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–æ–¥–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞—Å</p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Time Estimate */}
      <div className="bg-bloom-soft-pink/30 rounded-lg p-4">
        <p className="text-bloom-dusty-rose font-medium">
          ‚è±Ô∏è –≠—Ç–æ –∑–∞–π–º–µ—Ç –≤—Å–µ–≥–æ {presets?.onboardingConfig.estimatedDuration || '5-7 –º–∏–Ω—É—Ç'}
        </p>
        <p className="text-sm text-muted-foreground mt-1">
          –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
        </p>
        {presets?.onboardingConfig.prefilledSections?.length > 0 && (
          <p className="text-sm text-green-600 mt-2">
            ‚úÖ –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞
          </p>
        )}
      </div>

      {/* Privacy Note */}
      <div className="text-sm text-muted-foreground bg-gray-50 rounded-lg p-4">
        <p>
          üîí <strong>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:</strong> –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω–∞ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 
          —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –æ–ø—ã—Ç–∞ –≤ bloom
        </p>
        {analytics && (
          <p className="text-xs text-green-600 mt-2">
            ‚úÖ –î–∞–Ω–Ω—ã–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏: {analytics.dataIntegrity}%
          </p>
        )}
      </div>

      {/* Start Button */}
      <div className="pt-4">
        <Button
          onClick={onNext}
          size="lg"
          className="bg-bloom-dusty-rose hover:bg-bloom-mauve text-white px-8 py-3 text-lg"
        >
          <span>–ù–∞—á–∞—Ç—å –∞–Ω–∫–µ—Ç—É</span>
          <ArrowRight className="ml-2 h-5 w-5" />
        </Button>
      </div>
    </div>
  );
};

// ‚úÖ –ù–û–í–û–ï: –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω—ã
const getPersonaTitle = (personaId: string) => {
  const titles = {
    'first_signs': '–ü–µ—Ä–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏',
    'active_phase': '–ê–∫—Ç–∏–≤–Ω–∞—è —Ñ–∞–∑–∞', 
    'postmenopause': '–ü–æ—Å—Ç–º–µ–Ω–æ–ø–∞—É–∑–∞'
  };
  return titles[personaId as keyof typeof titles] || '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å';
};


import React from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import { useAuth } from '../../context/AuthContext';
import { UserRole } from '@/types/roles';
import { LoadingSpinner } from '@/components/ui/loading-spinner';

export interface ProtectedRouteProps {
  children: React.ReactNode;
  allowedRoles?: UserRole[];
  requiredRole?: UserRole; // Backward compatibility
  requireGuest?: boolean; // –ù–û–í–´–ô –ü–†–û–ü: –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  redirectTo?: string;
}

export const ProtectedRoute: React.FC<ProtectedRouteProps> = ({
  children,
  allowedRoles,
  requiredRole,
  requireGuest = false,
  redirectTo
}) => {
  const { user, isLoading } = useAuth();
  const location = useLocation();

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
  const [loadingTimeout, setLoadingTimeout] = React.useState(false);
  const [authError, setAuthError] = React.useState<string | null>(null);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  React.useEffect(() => {
    const urlParams = new URLSearchParams(location.search);
    const error = urlParams.get('error');
    const errorDescription = urlParams.get('error_description');
    
    if (error) {
      console.error('Auth error detected:', error, errorDescription);
      setAuthError(error);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –≤ localStorage –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      localStorage.setItem('eva_auth_error', JSON.stringify({
        error,
        errorDescription,
        timestamp: new Date().toISOString(),
        url: window.location.href
      }));
    }
  }, [location.search]);

  // –ï—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—à–∏–±–∫–∏
  if (authError) {
    return <Navigate to="/auth-error" replace />;
  }

  React.useEffect(() => {
    const timer = setTimeout(() => {
      if (isLoading) {
        setLoadingTimeout(true);
      }
    }, 10000); // 10 —Å–µ–∫—É–Ω–¥ –º–∞–∫—Å–∏–º—É–º –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏

    return () => clearTimeout(timer);
  }, [isLoading]);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
  if (isLoading && !loadingTimeout) {
    return (
      <div className="min-h-screen bloom-gradient flex items-center justify-center">
        <div className="bloom-card p-8 text-center">
          <LoadingSpinner size="lg" className="mx-auto mb-4" />
          <h2 className="text-xl font-playfair font-semibold text-foreground mb-2">
            –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...
          </h2>
          <p className="text-muted-foreground">
            –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
          </p>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–∏—Å–ª–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  if (loadingTimeout) {
    return <Navigate to="/auth-error" replace />;
  }

  // –õ–û–ì–ò–ö–ê –î–õ–Ø requireGuest (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–≤—Ö–æ–¥)
  if (requireGuest) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ recovery-—Å—Å—ã–ª–∫–æ–π (—Å–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è)
    const urlParams = new URLSearchParams(window.location.search);
    const isPasswordRecovery = urlParams.get('type') === 'recovery' && urlParams.has('access_token');
    
    // –ï—Å–ª–∏ —ç—Ç–æ recovery-—Å—Å—ã–ª–∫–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    if (isPasswordRecovery) {
      return <>{children}</>;
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω (–ù–ï recovery), —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
    if (user) {
      const defaultRedirect = getDashboardByRole(user.role);
      return <Navigate to={redirectTo || defaultRedirect} replace />;
    }
    
    // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é/–≤—Ö–æ–¥)
    return <>{children}</>;
  }

  // –°–¢–ê–ù–î–ê–†–¢–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø –ó–ê–©–ò–©–ï–ù–ù–´–• –†–û–£–¢–û–í
  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –ª–æ–≥–∏–Ω
  if (!user) {
    return <Navigate to="/login" replace />;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏, –µ—Å–ª–∏ –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã
  const rolesToCheck = allowedRoles || (requiredRole ? [requiredRole] : undefined);
  if (rolesToCheck && !rolesToCheck.includes(user.role)) {
    return (
      <div className="min-h-screen bloom-gradient flex items-center justify-center">
        <div className="bloom-card p-8 text-center">
          <div className="w-16 h-16 bg-destructive/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <span className="text-2xl">üö´</span>
          </div>
          <h1 className="text-2xl font-playfair font-semibold text-destructive mb-4">
            –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω
          </h1>
          <p className="text-muted-foreground mb-6">
            –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
          </p>
          <button
            onClick={() => window.history.back()}
            className="px-6 py-3 bg-primary text-primary-foreground rounded-xl hover:bg-primary/90 transition-colors font-medium"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
          </button>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
  return <>{children}</>;
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—É—Ç–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
const getUserRedirectPath = (user: any) => {
  // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–∞ –ª–æ–≥–∏–Ω
  if (!user) return '/login';
  
  // –ï—Å–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
  if (!user.registrationCompleted) {
    return '/register'; 
  }
  
  // –ï—Å–ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω –ò–õ–ò –Ω–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ - –Ω–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
  if (!user.onboardingCompleted) {
    return '/patient/onboarding';
  }
  
  // –ï—Å–ª–∏ –≤—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –Ω–æ –Ω–µ—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ - –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ—Ñ–∏–ª—è  
  if (!user.locationData) {
    return '/patient/profile-setup'; // –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  }
  
  // –í—Å–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ - –≤ –¥–∞—à–±–æ—Ä–¥
  return '/patient/dashboard';
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞ –ø–æ —Ä–æ–ª–∏
const getDashboardByRole = (role: string): string => {
  switch (role) {
    case 'patient':
      return '/patient/dashboard';
    case 'doctor':
      return '/doctor/dashboard';
    case 'admin':
      return '/admin/dashboard';
    default:
      return '/';
  }
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
export const useRegistrationGuard = () => {
  const { user } = useAuth();
  
  const checkRegistrationComplete = () => {
    if (!user) return false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ –º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    return user.registrationCompleted === true;
  };

  const checkOnboardingComplete = () => {
    if (!user) return false;
    
    return user.onboardingCompleted === true;
  };

  return {
    isRegistrationComplete: checkRegistrationComplete(),
    isOnboardingComplete: checkOnboardingComplete(),
    needsRegistration: user && !checkRegistrationComplete(),
    needsOnboarding: user && checkRegistrationComplete() && !checkOnboardingComplete()
  };
};

import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Checkbox } from '@/components/ui/checkbox';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { ScrollArea } from '@/components/ui/scroll-area';
import { StepWrapper } from './StepWrapper';
import { useRegistration } from '@/context/RegistrationContext';
import { Shield, FileText, Users, Mail, ExternalLink, CheckCircle } from 'lucide-react';
import { PrivacyPolicyContent, MedicalDataPolicyContent } from '@/legal/PrivacyPolicy';

interface ConsentItem {
  id: keyof typeof initialConsents;
  title: string;
  description: string;
  isRequired: boolean;
  documentContent?: typeof PrivacyPolicyContent;
  category: 'legal' | 'medical' | 'research' | 'marketing';
  icon: React.ReactNode;
}

const initialConsents = {
  gdpr_basic: false,
  medical_data: false,
  ai_analysis: false,
  research_participation: false,
  marketing_communications: false
};

const consentItems: ConsentItem[] = [
  {
    id: 'gdpr_basic',
    title: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
    description: '–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∏–º—è, email, –≤–æ–∑—Ä–∞—Å—Ç) –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å GDPR –∏ 152-–§–ó',
    isRequired: true,
    category: 'legal',
    icon: <Shield className="h-5 w-5 text-blue-600" />,
    documentContent: PrivacyPolicyContent
  },
  {
    id: 'medical_data',
    title: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö',
    description: '–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏–º–ø—Ç–æ–º–∞—Ö, –∞–Ω–∞–ª–∏–∑–∞—Ö –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–¥–æ—Ä–æ–≤—å—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
    isRequired: true,
    category: 'medical',
    icon: <FileText className="h-5 w-5 text-red-600" />,
    documentContent: MedicalDataPolicyContent
  },
  {
    id: 'ai_analysis',
    title: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ò–ò –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞',
    description: '–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
    isRequired: true,
    category: 'medical',
    icon: <Users className="h-5 w-5 text-purple-600" />
  },
  {
    id: 'research_participation',
    title: '–£—á–∞—Å—Ç–∏–µ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö',
    description: '–ê–Ω–æ–Ω–∏–º–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –º–µ–Ω–æ–ø–∞—É–∑—ã (–º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è)',
    isRequired: false,
    category: 'research',
    icon: <Users className="h-5 w-5 text-green-600" />
  },
  {
    id: 'marketing_communications',
    title: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏',
    description: '–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, —Å—Ç–∞—Ç—å—è—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö',
    isRequired: false,
    category: 'marketing',
    icon: <Mail className="h-5 w-5 text-orange-600" />
  }
];

interface ConsentCardProps {
  item: ConsentItem;
  isAccepted: boolean;
  onToggle: (accepted: boolean) => void;
}

const ConsentCard: React.FC<ConsentCardProps> = ({ item, isAccepted, onToggle }) => {
  return (
    <div className={`border rounded-lg p-4 transition-all ${
      isAccepted ? 'border-primary bg-primary/5' : 'border-muted'
    }`}>
      <div className="flex items-start gap-4">
        <div className="flex-shrink-0 mt-1">
          {item.icon}
        </div>
        
        <div className="flex-1">
          <div className="flex items-start justify-between mb-2">
            <div>
              <h3 className="font-semibold text-foreground flex items-center gap-2">
                {item.title}
                {item.isRequired && (
                  <span className="text-xs bg-red-100 text-red-700 px-2 py-0.5 rounded">
                    –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                  </span>
                )}
              </h3>
              <p className="text-sm text-muted-foreground mt-1">
                {item.description}
              </p>
            </div>
            
            <Checkbox
              checked={isAccepted}
              onCheckedChange={(checked) => onToggle(checked as boolean)}
              className="ml-2"
            />
          </div>
          
          {item.documentContent && (
            <Dialog>
              <DialogTrigger asChild>
                <Button variant="ghost" size="sm" className="text-primary hover:text-primary/80 p-0 h-auto">
                  <ExternalLink className="h-3 w-3 mr-1" />
                  –ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç
                </Button>
              </DialogTrigger>
              <DialogContent className="max-w-4xl max-h-[80vh]">
                <DialogHeader>
                  <DialogTitle>{item.documentContent.title}</DialogTitle>
                </DialogHeader>
                <ScrollArea className="h-[60vh] pr-4">
                  <div className="space-y-6">
                    <p className="text-sm text-muted-foreground">
                      –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {item.documentContent.lastUpdated}
                    </p>
                    {item.documentContent.sections.map((section, index) => (
                      <div key={index}>
                        <h3 className="font-semibold text-lg mb-3">{section.title}</h3>
                        <div className="text-sm leading-relaxed whitespace-pre-line">
                          {section.content}
                        </div>
                      </div>
                    ))}
                  </div>
                </ScrollArea>
              </DialogContent>
            </Dialog>
          )}
        </div>
      </div>
    </div>
  );
};

const SecuritySummary: React.FC = () => {
  return (
    <div className="bg-green-50 border border-green-200 rounded-lg p-6">
      <div className="flex items-start gap-3">
        <CheckCircle className="h-6 w-6 text-green-600 mt-0.5" />
        <div>
          <h3 className="font-semibold text-green-900 mb-2">
            –í–∞—à–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –Ω–∞—à –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
          </h3>
          <ul className="text-sm text-green-800 space-y-1">
            <li>üîí –í—Å–µ –¥–∞–Ω–Ω—ã–µ —à–∏—Ñ—Ä—É—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AES-256</li>
            <li>üõ°Ô∏è –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ GDPR –∏ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É</li>
            <li>üë• –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —Ç–æ–ª—å–∫–æ —É –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –º–µ–¥–ø–µ—Ä—Å–æ–Ω–∞–ª–∞</li>
            <li>üîÑ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –∞—É–¥–∏—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
            <li>‚ùå –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø—Ä–æ–¥–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export const Step2LegalConsents: React.FC = () => {
  const { state, updateStep2Data, nextStep, prevStep, canProceedToStep } = useRegistration();
  const { step2Data } = state;

  const handleConsentToggle = (consentId: keyof typeof initialConsents, accepted: boolean) => {
    updateStep2Data({
      [consentId]: accepted
    });
  };

  const allRequiredAccepted = consentItems
    .filter(item => item.isRequired)
    .every(item => step2Data[item.id]);

  const handleNext = () => {
    if (canProceedToStep(3)) {
      nextStep();
    }
  };

  return (
    <StepWrapper
      title="–°–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö"
      subtitle="–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö - –Ω–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç"
      step={2}
      totalSteps={3}
    >
      <div className="space-y-4">
        {consentItems.map(item => (
          <ConsentCard
            key={item.id}
            item={item}
            isAccepted={step2Data[item.id]}
            onToggle={(accepted) => handleConsentToggle(item.id, accepted)}
          />
        ))}
      </div>

      <SecuritySummary />

      <div className="flex justify-between pt-6">
        <Button variant="outline" onClick={prevStep}>
          –ù–∞–∑–∞–¥
        </Button>
        <Button
          onClick={handleNext}
          disabled={!allRequiredAccepted}
          className="bloom-button px-8"
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ—Ñ–∏–ª—è
        </Button>
      </div>
    </StepWrapper>
  );
};
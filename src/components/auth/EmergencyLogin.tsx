import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { useAuth } from '@/context/AuthContext';
import { toast } from '@/hooks/use-toast';
import { 
  Shield, 
  RefreshCw, 
  AlertTriangle, 
  CheckCircle, 
  Clock,
  Download,
  Settings,
  Users,
  UserCheck
} from 'lucide-react';
import { UserRole } from '@/types/roles';

export const EmergencyLogin: React.FC = () => {
  const [isActivating, setIsActivating] = useState(false);
  const [systemChecks, setSystemChecks] = useState<any>(null);
  const [emergencyMode, setEmergencyMode] = useState(false);
  const [recoveryAvailable, setRecoveryAvailable] = useState(false);
  const { user, login } = useAuth();
  const navigate = useNavigate();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    const checkSystemHealth = () => {
      const checks = localStorage.getItem('eva_system_checks');
      const emergencyStatus = localStorage.getItem('eva_emergency_mode');
      const recoveryStatus = localStorage.getItem('eva_recovery_available');
      
      if (checks) {
        setSystemChecks(JSON.parse(checks));
      }
      
      if (emergencyStatus === 'active') {
        setEmergencyMode(true);
      }
      
      if (recoveryStatus === 'true') {
        setRecoveryAvailable(true);
      }
    };

    checkSystemHealth();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(checkSystemHealth, 10000);
    return () => clearInterval(interval);
  }, []);

  const handleEmergencyAccess = async (role: 'patient' | 'doctor' | 'admin') => {
    setIsActivating(true);
    
    try {
      const emergencyCredentials = {
        patient: {
          email: 'emergency.patient@eva.local',
          password: 'emergency-patient-2025'
        },
        doctor: {
          email: 'emergency.doctor@eva.local', 
          password: 'emergency-doctor-2025'
        },
        admin: {
          email: 'admin@eva-platform.com',
          password: 'EvaAdmin2025!'
        }
      };

      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
      const emergencyUser = {
        id: `emergency-${role}-${Date.now()}`,
        email: emergencyCredentials[role].email,
        firstName: role === 'patient' ? 'Emergency' : role === 'doctor' ? 'Dr. Emergency' : 'Admin',
        lastName: role === 'patient' ? 'User' : role === 'doctor' ? 'Access' : 'Emergency',
        role: role.toUpperCase() as UserRole,
        createdAt: new Date(),
        registrationCompleted: true,
        onboardingCompleted: role !== 'patient' // –¢–æ–ª—å–∫–æ –ø–∞—Ü–∏–µ–Ω—Ç—ã –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–µ
      };

      // –õ–æ–≥–∏—Ä—É–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø
      const accessLog = {
        timestamp: new Date().toISOString(),
        type: 'emergency_access',
        role: role,
        userAgent: navigator.userAgent,
        url: window.location.href
      };
      
      const existingLogs = JSON.parse(localStorage.getItem('eva_access_logs') || '[]');
      existingLogs.push(accessLog);
      localStorage.setItem('eva_access_logs', JSON.stringify(existingLogs));
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º emergency –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      localStorage.setItem('eva-user', JSON.stringify(emergencyUser));
      localStorage.setItem('eva_emergency_active', 'true');
      
      toast({
        title: 'üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω',
        description: `–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ ${role === 'patient' ? '–ø–∞—Ü–∏–µ–Ω—Ç' : role === 'doctor' ? '–≤—Ä–∞—á' : '–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'} –≤ —Ä–µ–∂–∏–º–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è`,
        variant: 'default',
      });

      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      setTimeout(() => {
        if (role === 'patient') {
          window.location.href = '/patient/dashboard';
        } else if (role === 'doctor') {
          window.location.href = '/doctor/dashboard';
        } else {
          window.location.href = '/admin/dashboard';
        }
      }, 1000);

    } catch (error) {
      console.error('Emergency access error:', error);
      toast({
        title: '–û—à–∏–±–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º',
        variant: 'destructive',
      });
    } finally {
      setIsActivating(false);
    }
  };

  const handleRecoveryRestore = () => {
    const backup = localStorage.getItem('eva_auth_backup');
    if (backup) {
      try {
        const backupData = JSON.parse(backup);
        if (backupData.user) {
          localStorage.setItem('eva-user', JSON.stringify(backupData.user));
          localStorage.removeItem('eva_last_error');
          localStorage.removeItem('eva_recovery_available');
          
          toast({
            title: '‚úÖ –°–µ—Å—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
            description: '–î–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏',
          });
          
          // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          setTimeout(() => {
            window.location.reload();
          }, 1000);
        }
      } catch (error) {
        toast({
          title: '–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è',
          description: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏',
          variant: 'destructive',
        });
      }
    }
  };

  const handleClearData = () => {
    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞
    const keysToRemove = [
      'eva-user',
      'eva_user_data', 
      'eva_onboarding_data',
      'eva_auth_backup',
      'eva_last_error',
      'eva_emergency_mode',
      'eva_recovery_available',
      'eva_system_checks'
    ];
    
    keysToRemove.forEach(key => localStorage.removeItem(key));
    
    toast({
      title: '–î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã',
      description: '–í—Å–µ –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.',
    });
    
    setTimeout(() => {
      window.location.href = '/login';
    }, 1500);
  };

  const handleExportLogs = () => {
    const logs = {
      accessLogs: JSON.parse(localStorage.getItem('eva_access_logs') || '[]'),
      systemChecks: JSON.parse(localStorage.getItem('eva_system_checks') || '{}'),
      lastError: localStorage.getItem('eva_last_error'),
      emergencyMode: localStorage.getItem('eva_emergency_mode'),
      timestamp: new Date().toISOString(),
      userAgent: navigator.userAgent,
      url: window.location.href
    };
    
    const blob = new Blob([JSON.stringify(logs, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `eva-emergency-logs-${new Date().toISOString().slice(0, 10)}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    toast({
      title: '–õ–æ–≥–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã',
      description: '–§–∞–π–ª —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω',
    });
  };

  return (
    <div className="min-h-screen bloom-gradient flex items-center justify-center p-4">
      <div className="w-full max-w-2xl space-y-6">
        
        {/* –ì–ª–∞–≤–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ */}
        <Card className="border-red-200 shadow-xl">
          <CardHeader className="text-center pb-4">
            <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <Shield className="w-8 h-8 text-red-600" />
            </div>
            <CardTitle className="text-2xl font-playfair text-red-800">
              üö® –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –î–æ—Å—Ç—É–ø–∞
            </CardTitle>
            <CardDescription className="text-red-600">
              –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤—Ö–æ–¥–∞.
            </CardDescription>
          </CardHeader>
          
          <CardContent className="space-y-6">
            
            {/* –°–∏—Å—Ç–µ–º–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ */}
            {systemChecks && (
              <Alert className="border-yellow-200 bg-yellow-50">
                <AlertTriangle className="h-4 w-4 text-yellow-600" />
                <AlertDescription>
                  <div className="space-y-2">
                    <p className="font-semibold text-yellow-800">–°–∏—Å—Ç–µ–º–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:</p>
                    <div className="grid grid-cols-2 gap-2 text-sm">
                      <div className="flex justify-between">
                        <span>Supabase Client:</span>
                        <span className={systemChecks.hasSupabaseClient ? "text-green-600" : "text-red-600"}>
                          {systemChecks.hasSupabaseClient ? "‚úÖ" : "‚ùå"}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span>Auth Service:</span>
                        <span className={systemChecks.hasAuthService ? "text-green-600" : "text-red-600"}>
                          {systemChecks.hasAuthService ? "‚úÖ" : "‚ùå"}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span>LocalStorage:</span>
                        <span className={systemChecks.hasLocalStorage ? "text-green-600" : "text-red-600"}>
                          {systemChecks.hasLocalStorage ? "‚úÖ" : "‚ùå"}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span>Emergency Mode:</span>
                        <span className={emergencyMode ? "text-red-600" : "text-green-600"}>
                          {emergencyMode ? "üö® Active" : "‚úÖ Normal"}
                        </span>
                      </div>
                    </div>
                  </div>
                </AlertDescription>
              </Alert>
            )}

            {/* –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ */}
            {recoveryAvailable && (
              <Alert className="border-blue-200 bg-blue-50">
                <RefreshCw className="h-4 w-4 text-blue-600" />
                <AlertDescription>
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-semibold text-blue-800">–ù–∞–π–¥–µ–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–µ—Å—Å–∏–∏</p>
                      <p className="text-sm text-blue-600">–í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–µ—Å—Å–∏—é</p>
                    </div>
                    <Button
                      onClick={handleRecoveryRestore}
                      variant="outline"
                      size="sm"
                      className="border-blue-300 text-blue-700 hover:bg-blue-100"
                    >
                      <RefreshCw className="w-4 h-4 mr-1" />
                      –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                    </Button>
                  </div>
                </AlertDescription>
              </Alert>
            )}

            {/* –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤—Ö–æ–¥–∞ */}
            <div className="space-y-4">
              <h3 className="font-semibold text-foreground flex items-center gap-2">
                <UserCheck className="h-5 w-5" />
                –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≤—Ö–æ–¥–∞:
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                
                {/* –ü–∞—Ü–∏–µ–Ω—Ç */}
                <Button
                  onClick={() => handleEmergencyAccess('patient')}
                  disabled={isActivating}
                  className="h-auto p-4 flex flex-col items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white"
                >
                  <Users className="h-6 w-6" />
                  <div className="text-center">
                    <div className="font-semibold">–ü–∞—Ü–∏–µ–Ω—Ç</div>
                    <div className="text-xs opacity-90">–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø</div>
                  </div>
                </Button>

                {/* –í—Ä–∞—á */}
                <Button
                  onClick={() => handleEmergencyAccess('doctor')}
                  disabled={isActivating}
                  className="h-auto p-4 flex flex-col items-center gap-2 bg-green-600 hover:bg-green-700 text-white"
                >
                  <UserCheck className="h-6 w-6" />
                  <div className="text-center">
                    <div className="font-semibold">–í—Ä–∞—á</div>
                    <div className="text-xs opacity-90">–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –¥–æ—Å—Ç—É–ø</div>
                  </div>
                </Button>

                {/* –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä */}
                <Button
                  onClick={() => handleEmergencyAccess('admin')}
                  disabled={isActivating}
                  className="h-auto p-4 flex flex-col items-center gap-2 bg-red-600 hover:bg-red-700 text-white"
                >
                  <Settings className="h-6 w-6" />
                  <div className="text-center">
                    <div className="font-semibold">–ê–¥–º–∏–Ω</div>
                    <div className="text-xs opacity-90">–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø</div>
                  </div>
                </Button>
                
              </div>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã */}
            <div className="border-t pt-4 space-y-3">
              <h4 className="font-medium text-sm text-muted-foreground">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:</h4>
              <div className="flex flex-wrap gap-2">
                
                <Button
                  onClick={handleExportLogs}
                  variant="outline"
                  size="sm"
                  className="text-xs"
                >
                  <Download className="w-3 h-3 mr-1" />
                  –≠–∫—Å–ø–æ—Ä—Ç –ª–æ–≥–æ–≤
                </Button>
                
                <Button
                  onClick={handleClearData}
                  variant="outline"
                  size="sm"
                  className="text-xs border-red-200 text-red-600 hover:bg-red-50"
                >
                  <RefreshCw className="w-3 h-3 mr-1" />
                  –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                </Button>
                
                <Button
                  onClick={() => window.location.href = '/login'}
                  variant="outline"
                  size="sm"
                  className="text-xs"
                >
                  –û–±—ã—á–Ω—ã–π –≤—Ö–æ–¥
                </Button>
                
              </div>
            </div>

            {/* –°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ */}
            {isActivating && (
              <Alert className="border-green-200 bg-green-50">
                <Clock className="h-4 w-4 text-green-600 animate-spin" />
                <AlertDescription className="text-green-800">
                  –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø...
                </AlertDescription>
              </Alert>
            )}

          </CardContent>
        </Card>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
        <Card className="bg-muted/50 border-muted">
          <CardContent className="pt-6">
            <div className="text-center space-y-2">
              <h4 className="font-semibold text-sm">‚ÑπÔ∏è –û —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ</h4>
              <p className="text-xs text-muted-foreground">
                –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. 
                –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
              </p>
            </div>
          </CardContent>
        </Card>

      </div>
    </div>
  );
};
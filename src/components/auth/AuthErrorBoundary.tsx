import React, { Component, ReactNode } from 'react';
import { Link } from 'react-router-dom';
import { AlertTriangle, RefreshCw, Home, Shield } from 'lucide-react';
import { Button } from '@/components/ui/button';

interface Props {
  children: ReactNode;
  fallbackComponent?: ReactNode;
}

interface State {
  hasError: boolean;
  error: Error | null;
  errorInfo: any;
}

export class AuthErrorBoundary extends Component<Props, State> {
  constructor(props: Props) {
    super(props);
    this.state = {
      hasError: false,
      error: null,
      errorInfo: null
    };
  }

  static getDerivedStateFromError(error: Error): State {
    return {
      hasError: true,
      error,
      errorInfo: null
    };
  }

  componentDidCatch(error: Error, errorInfo: any) {
    console.error('üö® AuthErrorBoundary caught an error:', error, errorInfo);
    
    this.setState({
      error,
      errorInfo
    });

    // ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ auth –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö
    this.fallbackToEmergencyMode();
  }

  fallbackToEmergencyMode = () => {
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
      const currentPath = window.location.pathname;
      const errorTimestamp = new Date().toISOString();
      
      localStorage.setItem('eva_error_recovery', JSON.stringify({
        path: currentPath,
        timestamp: errorTimestamp,
        userAgent: navigator.userAgent
      }));

      // –û—á–∏—â–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ auth
      const authKeys = ['eva_user', 'eva_auth_token', 'eva_session'];
      authKeys.forEach(key => {
        const data = localStorage.getItem(key);
        if (data) {
          try {
            JSON.parse(data);
          } catch (e) {
            console.warn(`üîß Removing corrupted ${key}:`, e);
            localStorage.removeItem(key);
          }
        }
      });

      console.log('‚úÖ Emergency auth recovery completed');
    } catch (recoveryError) {
      console.error('‚ùå Emergency recovery failed:', recoveryError);
    }
  };

  handleRetry = () => {
    this.setState({
      hasError: false,
      error: null,
      errorInfo: null
    });
  };

  handleEmergencyLogin = () => {
    // –ü–µ—Ä–µ—Ö–æ–¥ –∫ emergency login —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const currentPath = window.location.pathname;
    window.location.href = `/login-safe?returnTo=${encodeURIComponent(currentPath)}`;
  };

  render() {
    if (this.state.hasError) {
      if (this.props.fallbackComponent) {
        return this.props.fallbackComponent;
      }

      return (
        <div className="min-h-screen bloom-gradient flex items-center justify-center p-4">
          <div className="max-w-md w-full">
            <div className="bloom-card p-8 text-center">
              {/* –ò–∫–æ–Ω–∫–∞ –æ—à–∏–±–∫–∏ */}
              <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-6">
                <AlertTriangle className="w-8 h-8 text-red-600" />
              </div>

              <h1 className="text-2xl font-playfair font-bold text-foreground mb-4">
                –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
              </h1>

              <p className="text-muted-foreground mb-6">
                –ù–µ –≤–æ–ª–Ω—É–π—Ç–µ—Å—å! –ú—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. 
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ.
              </p>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ */}
              {process.env.NODE_ENV === 'development' && this.state.error && (
                <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6 text-left">
                  <h3 className="font-semibold text-red-800 mb-2">–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:</h3>
                  <p className="text-sm text-red-700 font-mono">
                    {this.state.error.message}
                  </p>
                  {this.state.errorInfo && (
                    <details className="mt-2">
                      <summary className="text-sm text-red-600 cursor-pointer">
                        –°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤
                      </summary>
                      <pre className="text-xs text-red-600 mt-1 overflow-auto">
                        {this.state.errorInfo.componentStack}
                      </pre>
                    </details>
                  )}
                </div>
              )}

              {/* –í–∞—Ä–∏–∞–Ω—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è */}
              <div className="space-y-3">
                <Button
                  onClick={this.handleRetry}
                  className="w-full bloom-button flex items-center justify-center gap-2"
                >
                  <RefreshCw className="w-4 h-4" />
                  –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                </Button>

                <Button
                  onClick={this.handleEmergencyLogin}
                  variant="outline"
                  className="w-full flex items-center justify-center gap-2"
                >
                  <Shield className="w-4 h-4" />
                  –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—Ö–æ–¥
                </Button>

                <Link to="/" className="block">
                  <Button
                    variant="ghost"
                    className="w-full flex items-center justify-center gap-2"
                  >
                    <Home className="w-4 h-4" />
                    –ù–∞ –≥–ª–∞–≤–Ω—É—é
                  </Button>
                </Link>
              </div>

              {/* –ü–æ–¥–¥–µ—Ä–∂–∫–∞ */}
              <div className="mt-6 p-4 bg-muted rounded-lg">
                <p className="text-sm text-muted-foreground">
                  –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: 
                  <br />
                  <span className="font-mono text-xs">support@eva-platform.com</span>
                </p>
              </div>
            </div>
          </div>
        </div>
      );
    }

    return this.props.children;
  }
}

// ‚úÖ HOC –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
export const withAuthErrorBoundary = <P extends object>(
  Component: React.ComponentType<P>,
  fallbackComponent?: ReactNode
) => {
  const WrappedComponent = (props: P) => (
    <AuthErrorBoundary fallbackComponent={fallbackComponent}>
      <Component {...props} />
    </AuthErrorBoundary>
  );
  
  WrappedComponent.displayName = `withAuthErrorBoundary(${Component.displayName || Component.name})`;
  
  return WrappedComponent;
};
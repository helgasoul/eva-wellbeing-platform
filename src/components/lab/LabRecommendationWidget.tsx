import React from 'react';
import { Link } from 'react-router-dom';

interface LabRecommendationWidgetProps {
  symptoms: any[];
  lastLabDate?: string;
}

export const LabRecommendationWidget: React.FC<LabRecommendationWidgetProps> = ({
  symptoms,
  lastLabDate
}) => {
  const isLabTestNeeded = () => {
    if (!lastLabDate) return true;
    const lastDate = new Date(lastLabDate);
    const monthsAgo = (Date.now() - lastDate.getTime()) / (1000 * 60 * 60 * 24 * 30);
    return monthsAgo > 6; // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –∞–Ω–∞–ª–∏–∑—ã –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤
  };

  const getRecommendedTests = () => {
    const tests = [];
    
    // –ë–∞–∑–æ–≤—ã–µ –∞–Ω–∞–ª–∏–∑—ã –≤—Å–µ–≥–¥–∞ –Ω—É–∂–Ω—ã
    tests.push('–ì–æ—Ä–º–æ–Ω–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å –º–µ–Ω–æ–ø–∞—É–∑–∞');
    tests.push('–í–∏—Ç–∞–º–∏–Ω D + –ö–∞–ª—å—Ü–∏–π');
    
    // –ù–∞ –æ—Å–Ω–æ–≤–µ —Å–∏–º–ø—Ç–æ–º–æ–≤
    const hasHotFlashes = symptoms.some(s => s.hotFlashes?.count > 0);
    const hasMoodIssues = symptoms.some(s => s.mood?.anxiety > 3 || s.mood?.overall < 3);
    
    if (hasHotFlashes) {
      tests.push('–§—É–Ω–∫—Ü–∏—è —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã');
    }
    
    if (hasMoodIssues) {
      tests.push('–ù–µ–π—Ä–æ—Ç—Ä–∞–Ω—Å–º–∏—Ç—Ç–µ—Ä—ã –∏ —Å—Ç—Ä–µ—Å—Å');
    }
    
    return tests;
  };

  if (!isLabTestNeeded()) {
    return null;
  }

  const recommendedTests = getRecommendedTests();

  return (
    <div className="bloom-card bg-gradient-to-br from-green-50 to-blue-50 p-6 border-2 border-green-200">
      <div className="flex items-start justify-between mb-4">
        <div className="flex items-center">
          <span className="text-2xl mr-3">üß™</span>
          <div>
            <h3 className="text-lg font-bold text-gray-800">
              –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–¥–∞—Ç—å –∞–Ω–∞–ª–∏–∑—ã
            </h3>
            <p className="text-sm text-gray-600">
              {lastLabDate 
                ? `–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–Ω–∞–ª–∏–∑—ã –±—ã–ª–∏ ${new Date(lastLabDate).toLocaleDateString('ru-RU')}`
                : '–ê–Ω–∞–ª–∏–∑—ã –ø–æ–º–æ–≥—É—Ç —Ç–æ—á–Ω–µ–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ—Ä–∞–ø–∏—é'
              }
            </p>
          </div>
        </div>
        <Link
          to="/patient/lab-tests"
          className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors text-sm font-medium"
        >
          –í—ã–±—Ä–∞—Ç—å –∞–Ω–∞–ª–∏–∑—ã
        </Link>
      </div>

      <div className="space-y-2">
        <p className="text-sm font-medium text-gray-700 mb-2">
          –ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:
        </p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
          {recommendedTests.map((test, index) => (
            <div key={index} className="flex items-center text-sm text-gray-600">
              <span className="text-green-500 mr-2">‚úì</span>
              {test}
            </div>
          ))}
        </div>
      </div>

      <div className="mt-4 p-3 bg-white/80 rounded-lg">
        <div className="flex items-center text-sm text-blue-700">
          <span className="mr-2">üí°</span>
          <span>
            –ò–ò-–∞–Ω–∞–ª–∏–∑ –ø–æ–º–æ–∂–µ—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –¥–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
          </span>
        </div>
      </div>
    </div>
  );
};
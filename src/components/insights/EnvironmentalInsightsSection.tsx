import React, { useState } from 'react';
import { EnvironmentalFactors } from '../../services/environmentalService';
import { EnvironmentalInsight } from '../../utils/environmentalAnalyzer';
import { cn } from '../../lib/utils';

interface EnvironmentalInsightsSectionProps {
  environmentalData: EnvironmentalFactors | null;
  insights: EnvironmentalInsight[];
  location: { lat: number; lon: number; city: string };
  isLoading?: boolean;
}

export const EnvironmentalInsightsSection: React.FC<EnvironmentalInsightsSectionProps> = ({
  environmentalData,
  insights,
  location,
  isLoading = false
}) => {
  const [selectedPeriod, setSelectedPeriod] = useState<'today' | 'week' | 'month'>('today');

  if (isLoading) {
    return <LoadingEnvironmentalData />;
  }

  return (
    <div className="bg-white rounded-2xl shadow-lg p-6">
      <h2 className="text-xl font-bold text-gray-800 mb-6 flex items-center">
        üå§Ô∏è –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã
        <span className="ml-2 text-sm bg-blue-100 text-blue-700 px-2 py-1 rounded-full">
          –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
        </span>
      </h2>

      {/* –¢–µ–∫—É—â–∏–µ —É—Å–ª–æ–≤–∏—è */}
      <CurrentEnvironmentalConditions data={environmentalData} location={location} />
      
      {/* –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Å–∏–º–ø—Ç–æ–º–∞–º–∏ */}
      <EnvironmentalCorrelations insights={insights} />
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–µ–∫—É—â–∏—Ö —É—Å–ª–æ–≤–∏–π
const CurrentEnvironmentalConditions = ({ 
  data, 
  location 
}: { 
  data: EnvironmentalFactors | null;
  location: { lat: number; lon: number; city: string };
}) => {
  if (!data) return <NoEnvironmentalData />;

  const getPressureStatus = (pressure: number) => {
    if (pressure < 1000) return { status: '–ù–∏–∑–∫–æ–µ', color: 'text-red-600', risk: '–í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–∏–ª–∏–≤—ã' };
    if (pressure > 1020) return { status: '–í—ã—Å–æ–∫–æ–µ', color: 'text-orange-600', risk: '–í–æ–∑–º–æ–∂–Ω—ã –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏' };
    return { status: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ', color: 'text-green-600', risk: '–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ' };
  };

  const getHumidityStatus = (humidity: number) => {
    if (humidity > 70) return { status: '–í—ã—Å–æ–∫–∞—è', color: 'text-red-600', risk: '–ú–æ–∂–µ—Ç —É—Ö—É–¥—à–∏—Ç—å —Å–æ–Ω' };
    if (humidity < 30) return { status: '–ù–∏–∑–∫–∞—è', color: 'text-orange-600', risk: '–í–æ–∑–º–æ–∂–Ω–∞ –Ω–æ—á–Ω–∞—è –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å' };
    return { status: '–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è', color: 'text-green-600', risk: '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ' };
  };

  const getAirQualityStatus = (pm25: number) => {
    if (pm25 > 35) return { status: '–ü–ª–æ—Ö–æ–µ', color: 'text-red-600', risk: '–ú–æ–∂–µ—Ç —Å–Ω–∏–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ' };
    if (pm25 > 15) return { status: '–£–º–µ—Ä–µ–Ω–Ω–æ–µ', color: 'text-yellow-600', risk: '–û–≥—Ä–∞–Ω–∏—á—å—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —É–ª–∏—Ü–µ' };
    return { status: '–•–æ—Ä–æ—à–µ–µ', color: 'text-green-600', risk: '–ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫' };
  };

  const getUVStatus = (uvIndex: number) => {
    if (uvIndex > 6) return { status: '–í—ã—Å–æ–∫–∏–π', color: 'text-red-600', risk: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç—É' };
    if (uvIndex > 3) return { status: '–£–º–µ—Ä–µ–Ω–Ω—ã–π', color: 'text-orange-600', risk: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞—â–∏—Ç–∞' };
    return { status: '–ù–∏–∑–∫–∏–π', color: 'text-green-600', risk: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ' };
  };

  const pressureStatus = getPressureStatus(data.weather.current.pressure);
  const humidityStatus = getHumidityStatus(data.weather.current.humidity);
  const airQualityStatus = getAirQualityStatus(data.airQuality.current.pm2_5);
  const uvStatus = getUVStatus(data.weather.current.uv_index);

  return (
    <div className="mb-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º */}
      <div className="flex items-center justify-between mb-4">
        <div className="flex items-center">
          <span className="text-lg font-medium text-gray-700">üìç {location.city}</span>
          <span className="ml-2 text-sm text-gray-500">
            {Math.round(data.weather.current.temperature)}¬∞C
          </span>
        </div>
        <div className="text-xs text-gray-500">
          –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date(data.timestamp).toLocaleTimeString('ru')}
        </div>
      </div>

      {/* –°–µ—Ç–∫–∞ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
        {/* –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg p-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-2xl">üìä</span>
            <span className={`text-sm font-medium ${pressureStatus.color}`}>
              {pressureStatus.status}
            </span>
          </div>
          <div className="text-lg font-bold text-gray-800">
            {Math.round(data.weather.current.pressure)} hPa
          </div>
          <div className="text-xs text-gray-600 mt-1">
            –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ
          </div>
          <div className="text-xs text-gray-500 mt-2">
            {pressureStatus.risk}
          </div>
        </div>

        {/* –í–ª–∞–∂–Ω–æ—Å—Ç—å */}
        <div className="bg-gradient-to-br from-green-50 to-green-100 rounded-lg p-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-2xl">üíß</span>
            <span className={`text-sm font-medium ${humidityStatus.color}`}>
              {humidityStatus.status}
            </span>
          </div>
          <div className="text-lg font-bold text-gray-800">
            {Math.round(data.weather.current.humidity)}%
          </div>
          <div className="text-xs text-gray-600 mt-1">
            –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞
          </div>
          <div className="text-xs text-gray-500 mt-2">
            {humidityStatus.risk}
          </div>
        </div>

        {/* –ö–∞—á–µ—Å—Ç–≤–æ –≤–æ–∑–¥—É—Ö–∞ */}
        <div className="bg-gradient-to-br from-purple-50 to-purple-100 rounded-lg p-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-2xl">üå¨Ô∏è</span>
            <span className={`text-sm font-medium ${airQualityStatus.color}`}>
              {airQualityStatus.status}
            </span>
          </div>
          <div className="text-lg font-bold text-gray-800">
            {Math.round(data.airQuality.current.pm2_5)} Œºg/m¬≥
          </div>
          <div className="text-xs text-gray-600 mt-1">
            PM2.5
          </div>
          <div className="text-xs text-gray-500 mt-2">
            {airQualityStatus.risk}
          </div>
        </div>

        {/* –£–§-–∏–Ω–¥–µ–∫—Å */}
        <div className="bg-gradient-to-br from-yellow-50 to-yellow-100 rounded-lg p-4">
          <div className="flex items-center justify-between mb-2">
            <span className="text-2xl">‚òÄÔ∏è</span>
            <span className={`text-sm font-medium ${uvStatus.color}`}>
              {uvStatus.status}
            </span>
          </div>
          <div className="text-lg font-bold text-gray-800">
            {Math.round(data.weather.current.uv_index)}
          </div>
          <div className="text-xs text-gray-600 mt-1">
            –£–§-–∏–Ω–¥–µ–∫—Å
          </div>
          <div className="text-xs text-gray-500 mt-2">
            {uvStatus.risk}
          </div>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
const EnvironmentalCorrelations = ({ insights }: { insights: EnvironmentalInsight[] }) => {
  if (insights.length === 0) {
    return (
      <div className="bg-gray-50 rounded-lg p-6 text-center">
        <div className="text-4xl mb-3">üìä</div>
        <h3 className="font-semibold text-gray-800 mb-2">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–ª–∏—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã</h3>
        <p className="text-gray-600 text-sm">
          –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–ø–∏—Å–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤. –ß–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –º—ã —Å–º–æ–∂–µ–º 
          –≤—ã—è–≤–∏—Ç—å —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–≥–æ–¥–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –≤–∞—à–∏–º —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º.
        </p>
      </div>
    );
  }

  return (
    <div>
      <h3 className="font-semibold text-gray-800 mb-4">üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏</h3>
      <div className="space-y-4">
        {insights.map((insight, index) => (
          <EnvironmentalInsightCard key={index} insight={insight} />
        ))}
      </div>
    </div>
  );
};

// –ö–∞—Ä—Ç–æ—á–∫–∞ –∏–Ω—Å–∞–π—Ç–∞
const EnvironmentalInsightCard = ({ insight }: { insight: EnvironmentalInsight }) => {
  const [expanded, setExpanded] = useState(false);

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'high': return 'border-red-200 bg-red-50';
      case 'medium': return 'border-yellow-200 bg-yellow-50';
      default: return 'border-blue-200 bg-blue-50';
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'pressure_correlation': return 'üìä';
      case 'humidity_impact': return 'üíß';
      case 'air_quality_alert': return 'üå¨Ô∏è';
      case 'weather_prediction': return 'üîÆ';
      default: return 'üìà';
    }
  };

  const getCorrelationText = (correlation: number) => {
    const abs = Math.abs(correlation);
    if (abs > 0.7) return '–°–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å';
    if (abs > 0.4) return '–£–º–µ—Ä–µ–Ω–Ω–∞—è —Å–≤—è–∑—å';
    if (abs > 0.2) return '–°–ª–∞–±–∞—è —Å–≤—è–∑—å';
    return '–ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–∞—è —Å–≤—è–∑—å';
  };

  return (
    <div className={cn(
      "border-2 rounded-xl p-4 transition-all",
      getSeverityColor(insight.severity)
    )}>
      <div className="flex items-start justify-between mb-3">
        <div className="flex items-center">
          <div className="text-2xl mr-3">{getTypeIcon(insight.type)}</div>
          <div>
            <h4 className="font-semibold text-gray-800">{insight.title}</h4>
            <div className="flex items-center mt-1">
              <span className="text-xs text-gray-600 mr-2">
                {getCorrelationText(insight.correlation)}
              </span>
              <div className="flex items-center bg-white rounded-full px-2 py-1">
                <div className="w-2 h-2 bg-green-500 rounded-full mr-1"></div>
                <span className="text-xs text-gray-600">{insight.confidence}%</span>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <p className="text-sm text-gray-700 mb-3">
        {insight.description}
      </p>
      
      {/* –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ */}
      <div className="bg-white rounded-lg p-3 mb-3">
        <div className="flex items-center mb-2">
          <span className="text-lg mr-2">
            {insight.forecast.tomorrow === 'better' ? 'üìà' : 
             insight.forecast.tomorrow === 'worse' ? 'üìâ' : '‚û°Ô∏è'}
          </span>
          <span className="text-sm font-medium text-gray-800">
            –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞: {
              insight.forecast.tomorrow === 'better' ? '–£–ª—É—á—à–µ–Ω–∏–µ' :
              insight.forecast.tomorrow === 'worse' ? '–£—Ö—É–¥—à–µ–Ω–∏–µ' : '–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π'
            }
          </span>
        </div>
        <p className="text-xs text-gray-600">{insight.forecast.reason}</p>
      </div>
      
      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div>
        <button
          onClick={() => setExpanded(!expanded)}
          className="text-xs text-purple-600 hover:text-purple-800 font-medium mb-2"
        >
          {expanded ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        </button>
        
        {expanded && (
          <div className="space-y-1">
            {insight.recommendations.map((rec, index) => (
              <div key={index} className="flex items-start text-xs text-gray-700">
                <span className="text-purple-500 mr-2">‚Ä¢</span>
                {rec}
              </div>
            ))}
            
            {insight.forecast.suggestions.length > 0 && (
              <div className="mt-3 pt-3 border-t border-gray-200">
                <div className="text-xs font-medium text-gray-700 mb-1">–ù–∞ –∑–∞–≤—Ç—Ä–∞:</div>
                {insight.forecast.suggestions.map((suggestion, index) => (
                  <div key={index} className="flex items-start text-xs text-gray-600">
                    <span className="text-blue-500 mr-2">‚Üí</span>
                    {suggestion}
                  </div>
                ))}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
const LoadingEnvironmentalData = () => (
  <div className="bg-white rounded-2xl shadow-lg p-6">
    <div className="animate-pulse">
      <div className="h-6 bg-gray-200 rounded w-1/3 mb-6"></div>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
        {[1, 2, 3, 4].map((i) => (
          <div key={i} className="bg-gray-100 rounded-lg p-4">
            <div className="h-4 bg-gray-200 rounded w-2/3 mb-2"></div>
            <div className="h-6 bg-gray-200 rounded w-1/2 mb-2"></div>
            <div className="h-3 bg-gray-200 rounded w-3/4"></div>
          </div>
        ))}
      </div>
      <div className="h-32 bg-gray-200 rounded"></div>
    </div>
  </div>
);

// –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–∞–Ω–Ω—ã—Ö
const NoEnvironmentalData = () => (
  <div className="bg-gray-50 rounded-lg p-6 text-center mb-6">
    <div className="text-4xl mb-3">üåç</div>
    <h3 className="font-semibold text-gray-800 mb-2">–î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</h3>
    <p className="text-gray-600 text-sm">
      –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤—Ä—É—á–Ω—É—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö.
    </p>
  </div>
);

export default EnvironmentalInsightsSection;
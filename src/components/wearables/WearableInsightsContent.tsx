import React, { useState, useEffect } from 'react';
import { WearableData, WearableDevice } from '@/pages/patient/WearableDevices';
import { useAuth } from '@/context/AuthContext';
import { performWearableAnalysis, WearableInsight } from '@/utils/wearableAnalyzer';

interface WearableInsightsContentProps {
  data: WearableData[];
  devices: WearableDevice[];
}

export const WearableInsightsContent: React.FC<WearableInsightsContentProps> = ({
  data,
  devices
}) => {
  const { user } = useAuth();
  const [insights, setInsights] = useState<WearableInsight[]>([]);
  const [isAnalyzing, setIsAnalyzing] = useState(false);

  useEffect(() => {
    if (data.length > 0) {
      analyzeWearableData();
    }
  }, [data, user?.id]);

  const analyzeWearableData = async () => {
    if (!user?.id) return;
    
    setIsAnalyzing(true);
    try {
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏
      const symptomEntries = JSON.parse(localStorage.getItem(`symptom_entries_${user.id}`) || '[]');
      
      const wearableInsights = await performWearableAnalysis(data, symptomEntries);
      setInsights(wearableInsights);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–æ—Å–∏–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤:', error);
    } finally {
      setIsAnalyzing(false);
    }
  };

  if (devices.length === 0) {
    return (
      <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
        <div className="text-center py-12">
          <div className="text-6xl mb-4 animate-gentle-float">üß†</div>
          <h3 className="text-xl font-playfair font-semibold gentle-text mb-2">
            –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
          </h3>
          <p className="soft-text">
            –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –Ω–æ—Å–∏–º–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å–∞–π—Ç–æ–≤
          </p>
        </div>
      </div>
    );
  }

  if (isAnalyzing) {
    return <WearableAnalysisLoading />;
  }

  return (
    <div className="space-y-6">
      
      {/* –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã */}
      <WearableKeyInsights insights={insights} />
      
      {/* –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Å–∏–º–ø—Ç–æ–º–∞–º–∏ –º–µ–Ω–æ–ø–∞—É–∑—ã */}
      <WearableSymptomCorrelations insights={insights} />
      
      {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é */}
      <WearableRecommendations insights={insights} />
      
      {/* –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ —Ç—Ä–µ–Ω–¥—ã */}
      <WearablePredictions data={data} />
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–∞–ª–∏–∑–∞
const WearableAnalysisLoading = () => (
  <div className="bloom-card bg-white/90 backdrop-blur-sm p-8">
    <div className="text-center">
      <div className="animate-spin text-4xl mb-4">üß†</div>
      <h3 className="text-lg font-playfair font-semibold gentle-text mb-2">
        –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ...
      </h3>
      <p className="soft-text mb-4">
        –ò—â–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –¥–∞–Ω–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ —Å–∏–º–ø—Ç–æ–º–∞–º–∏ –º–µ–Ω–æ–ø–∞—É–∑—ã
      </p>
      <div className="bg-bloom-vanilla rounded-full h-2 max-w-md mx-auto">
        <div className="bg-primary h-2 rounded-full animate-pulse w-3/4" />
      </div>
    </div>
  </div>
);

// –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã
const WearableKeyInsights = ({ insights }: { insights: WearableInsight[] }) => {
  const highPriorityInsights = insights.filter(i => i.priority === 'high');

  if (highPriorityInsights.length === 0) {
    return (
      <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
        <h2 className="text-xl font-playfair font-bold gentle-text mb-4">
          üéØ –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã
        </h2>
        <div className="text-center py-8">
          <div className="text-4xl mb-2">‚ú®</div>
          <p className="soft-text">
            –ü–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –∑–Ω–∞—á–∏–º—ã—Ö –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
      <h2 className="text-xl font-playfair font-bold gentle-text mb-6">
        üéØ –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã
      </h2>
      
      <div className="space-y-4">
        {highPriorityInsights.map(insight => (
          <InsightCard key={insight.id} insight={insight} />
        ))}
      </div>
    </div>
  );
};

// –ö–∞—Ä—Ç–æ—á–∫–∞ –∏–Ω—Å–∞–π—Ç–∞
const InsightCard = ({ insight }: { insight: WearableInsight }) => {
  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high': return 'border-red-200 bg-red-50';
      case 'medium': return 'border-yellow-200 bg-yellow-50';
      case 'low': return 'border-blue-200 bg-blue-50';
      default: return 'border-gray-200 bg-gray-50';
    }
  };

  const getTrendIcon = (trend?: string) => {
    switch (trend) {
      case 'improving': return 'üìà';
      case 'declining': return 'üìâ';
      case 'stable': return 'üìä';
      default: return '';
    }
  };

  return (
    <div className={`border-2 rounded-xl p-4 ${getPriorityColor(insight.priority)}`}>
      <div className="flex items-start justify-between mb-3">
        <div className="flex items-center">
          <span className="text-2xl mr-3">{insight.icon}</span>
          <div>
            <h3 className="font-semibold gentle-text">{insight.title}</h3>
            <div className="flex items-center space-x-2 text-xs mt-1">
              <span className={`px-2 py-1 rounded-full ${
                insight.priority === 'high' ? 'bg-red-100 text-red-700' :
                insight.priority === 'medium' ? 'bg-yellow-100 text-yellow-700' :
                'bg-blue-100 text-blue-700'
              }`}>
                {insight.priority === 'high' ? '–í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' :
                 insight.priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç' : '–ù–∏–∑–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç'}
              </span>
              <span className="soft-text">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {insight.confidence}%</span>
              {insight.trend && (
                <span className="flex items-center">
                  {getTrendIcon(insight.trend)}
                  <span className="ml-1 soft-text capitalize">{insight.trend}</span>
                </span>
              )}
            </div>
          </div>
        </div>
      </div>
      
      <p className="soft-text mb-4">{insight.description}</p>
      
      {insight.recommendations && insight.recommendations.length > 0 && (
        <div>
          <h4 className="font-medium gentle-text mb-2">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
          <ul className="space-y-1">
            {insight.recommendations.map((rec, index) => (
              <li key={index} className="text-sm soft-text flex items-start">
                <span className="mr-2 mt-1">‚Ä¢</span>
                <span>{rec}</span>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
};

// –ö–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Å–∏–º–ø—Ç–æ–º–∞–º–∏
const WearableSymptomCorrelations = ({ insights }: { insights: WearableInsight[] }) => {
  const correlationInsights = insights.filter(i => i.correlation !== undefined);

  if (correlationInsights.length === 0) {
    return (
      <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
        <h2 className="text-xl font-playfair font-bold gentle-text mb-4">
          üîó –°–≤—è–∑–∏ —Å —Å–∏–º–ø—Ç–æ–º–∞–º–∏ –º–µ–Ω–æ–ø–∞—É–∑—ã
        </h2>
        <div className="text-center py-8">
          <div className="text-4xl mb-2">üîç</div>
          <p className="soft-text">
            –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª—å—à–µ –∑–∞–ø–∏—Å–µ–π —Å–∏–º–ø—Ç–æ–º–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
      <h2 className="text-xl font-playfair font-bold gentle-text mb-6">
        üîó –°–≤—è–∑–∏ —Å —Å–∏–º–ø—Ç–æ–º–∞–º–∏ –º–µ–Ω–æ–ø–∞—É–∑—ã
      </h2>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        {correlationInsights.map(insight => (
          <div key={insight.id} className="border border-bloom-caramel/20 rounded-lg p-4">
            <div className="flex items-center justify-between mb-2">
              <span className="text-lg">{insight.icon}</span>
              <div className="text-right">
                <div className={`text-sm font-bold ${
                  Math.abs(insight.correlation || 0) > 0.5 ? 'text-red-600' :
                  Math.abs(insight.correlation || 0) > 0.3 ? 'text-yellow-600' : 'text-green-600'
                }`}>
                  {Math.round(Math.abs(insight.correlation || 0) * 100)}% –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—è
                </div>
              </div>
            </div>
            <h4 className="font-semibold gentle-text mb-1">{insight.title}</h4>
            <p className="text-sm soft-text">{insight.description}</p>
          </div>
        ))}
      </div>
    </div>
  );
};

// –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
const WearableRecommendations = ({ insights }: { insights: WearableInsight[] }) => {
  const actionableInsights = insights.filter(i => i.actionable && i.recommendations);

  if (actionableInsights.length === 0) {
    return (
      <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
        <h2 className="text-xl font-playfair font-bold gentle-text mb-4">
          üí° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        </h2>
        <div className="text-center py-8">
          <div className="text-4xl mb-2">üëç</div>
          <p className="soft-text">
            –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ü–æ–∫–∞ –≤—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –Ω–æ—Ä–º–µ
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
      <h2 className="text-xl font-playfair font-bold gentle-text mb-6">
        üí° –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
      </h2>
      
      <div className="space-y-6">
        {actionableInsights.map(insight => (
          <div key={insight.id} className="border-l-4 border-primary pl-4">
            <h3 className="font-semibold gentle-text mb-2 flex items-center">
              <span className="mr-2">{insight.icon}</span>
              {insight.title}
            </h3>
            <div className="space-y-2">
              {insight.recommendations?.map((rec, index) => (
                <div key={index} className="flex items-start">
                  <div className="bg-primary rounded-full w-2 h-2 mt-2 mr-3 flex-shrink-0" />
                  <span className="text-sm soft-text">{rec}</span>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

// –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ —Ç—Ä–µ–Ω–¥—ã
const WearablePredictions = ({ data }: { data: WearableData[] }) => {
  if (data.length < 7) {
    return (
      <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
        <h2 className="text-xl font-playfair font-bold gentle-text mb-4">
          üîÆ –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ —Ç—Ä–µ–Ω–¥—ã
        </h2>
        <div className="text-center py-8">
          <div className="text-4xl mb-2">üìä</div>
          <p className="soft-text">
            –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 7 –¥–Ω–µ–π –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
          </p>
        </div>
      </div>
    );
  }

  // –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤
  const recentWeek = data.slice(-7);
  const previousWeek = data.slice(-14, -7);

  const calculateWeeklyAverage = (weekData: WearableData[], metric: string) => {
    if (weekData.length === 0) return 0;
    
    return weekData.reduce((sum, d) => {
      switch (metric) {
        case 'sleep':
          return sum + (d.sleep?.total_minutes || 0) / 60;
        case 'steps':
          return sum + (d.activity?.steps || 0);
        case 'hrv':
          return sum + (d.heart_rate?.variability || 0);
        default:
          return sum;
      }
    }, 0) / weekData.length;
  };

  const trends = [
    {
      metric: '–ö–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞',
      icon: 'üò¥',
      current: calculateWeeklyAverage(recentWeek, 'sleep'),
      previous: calculateWeeklyAverage(previousWeek, 'sleep'),
      unit: '—á',
      good: 7
    },
    {
      metric: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      icon: 'üë£',
      current: calculateWeeklyAverage(recentWeek, 'steps'),
      previous: calculateWeeklyAverage(previousWeek, 'steps'),
      unit: '—à–∞–≥–æ–≤',
      good: 8000
    },
    {
      metric: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ',
      icon: '‚ù§Ô∏è',
      current: calculateWeeklyAverage(recentWeek, 'hrv'),
      previous: calculateWeeklyAverage(previousWeek, 'hrv'),
      unit: '–º—Å',
      good: 30
    }
  ];

  return (
    <div className="bloom-card bg-white/90 backdrop-blur-sm p-6">
      <h2 className="text-xl font-playfair font-bold gentle-text mb-6">
        üîÆ –¢—Ä–µ–Ω–¥—ã –∑–∞ –Ω–µ–¥–µ–ª—é
      </h2>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        {trends.map((trend, index) => {
          const change = trend.current - trend.previous;
          const changePercent = trend.previous > 0 ? (change / trend.previous) * 100 : 0;
          const isImproving = change > 0;
          const isSignificant = Math.abs(changePercent) > 5;

          return (
            <div key={index} className="border border-bloom-caramel/20 rounded-lg p-4 text-center">
              <div className="text-3xl mb-2">{trend.icon}</div>
              <h3 className="font-semibold gentle-text mb-2">{trend.metric}</h3>
              
              <div className="text-2xl font-bold text-primary mb-1">
                {trend.current.toFixed(trend.unit === '—á' ? 1 : 0)}{trend.unit}
              </div>
              
              {isSignificant && (
                <div className={`text-sm flex items-center justify-center ${
                  isImproving ? 'text-green-600' : 'text-red-600'
                }`}>
                  <span className="mr-1">
                    {isImproving ? 'üìà' : 'üìâ'}
                  </span>
                  {Math.abs(changePercent).toFixed(0)}% 
                  {isImproving ? ' —Ä–æ—Å—Ç' : ' —Å–Ω–∏–∂–µ–Ω–∏–µ'}
                </div>
              )}
              
              {!isSignificant && (
                <div className="text-sm text-gray-500">
                  üìä –°—Ç–∞–±–∏–ª—å–Ω–æ
                </div>
              )}
            </div>
          );
        })}
      </div>
      
      <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
        <div className="text-sm text-blue-800">
          <strong>üí° –°–æ–≤–µ—Ç:</strong> –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö –º–µ—Ç—Ä–∏–∫ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å, 
          –∫–∞–∫ –≤–∞—à –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∏–º–ø—Ç–æ–º—ã –º–µ–Ω–æ–ø–∞—É–∑—ã. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–Ω–∏ —Å 
          –ª—É—á—à–∏–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –∏ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —É—Å–ª–æ–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∫ –Ω–∏–º –ø—Ä–∏–≤–µ–ª–∏.
        </div>
      </div>
    </div>
  );
};
import { Calculator, CalculatorInput, CalculatorResult } from '../types/calculator';

export function getEmbeddedCalculators(): Calculator[] {
  return [
    // ========== GAIL MODEL - –†–ò–°–ö –†–ê–ö–ê –ì–†–£–î–ò ==========
    {
      id: 'gail-model',
      title: 'Gail Model - –†–∏—Å–∫ —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      description: '–û—Ü–µ–Ω–∫–∞ 5-–ª–µ—Ç–Ω–µ–≥–æ –∏ –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ä–∏—Å–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–∞–∫–∞ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
      category: 'oncology',
      icon: 'üéóÔ∏è',
      isPopular: true,
      menopauseRelevance: 5,
      tags: ['—Ä–∞–∫ –≥—Ä—É–¥–∏', '–æ–Ω–∫–æ—Ä–∏—Å–∫', '—Å–∫—Ä–∏–Ω–∏–Ω–≥', '–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞'],
      inputs: [
        {
          id: 'age',
          label: '–í–æ–∑—Ä–∞—Å—Ç',
          type: 'number',
          unit: '–ª–µ—Ç',
          min: 35,
          max: 85,
          required: true
        },
        {
          id: 'ageFirstMenstruation',
          label: '–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤–æ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏',
          type: 'select',
          options: [
            { value: 7, label: '‚â§11 –ª–µ—Ç' },
            { value: 10, label: '12 –ª–µ—Ç' },
            { value: 5, label: '13 –ª–µ—Ç' },
            { value: 2, label: '14 –ª–µ—Ç' },
            { value: 0, label: '‚â•15 –ª–µ—Ç' }
          ],
          required: true
        },
        {
          id: 'ageFirstBirth',
          label: '–í–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤—ã—Ö —Ä–æ–¥–æ–≤',
          type: 'select',
          options: [
            { value: 0, label: '–ù–µ—Ç —Ä–æ–¥–æ–≤' },
            { value: 4, label: '<20 –ª–µ—Ç' },
            { value: 10, label: '20-24 –≥–æ–¥–∞' },
            { value: 13, label: '25-29 –ª–µ—Ç' },
            { value: 17, label: '‚â•30 –ª–µ—Ç' }
          ],
          required: true
        },
        {
          id: 'relativesWithBreastCancer',
          label: '–†–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã —Å —Ä–∞–∫–æ–º –≥—Ä—É–¥–∏',
          type: 'select',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 15, label: '1 —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü–∞' },
            { value: 25, label: '‚â•2 —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü' }
          ],
          required: true
        },
        {
          id: 'biopsies',
          label: '–ë–∏–æ–ø—Å–∏–∏ –º–æ–ª–æ—á–Ω–æ–π –∂–µ–ª–µ–∑—ã',
          type: 'select',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 15, label: '1 –±–∏–æ–ø—Å–∏—è' },
            { value: 25, label: '‚â•2 –±–∏–æ–ø—Å–∏–π' }
          ],
          required: true
        },
        {
          id: 'atypicalHyperplasia',
          label: '–ê—Ç–∏–ø–∏—á–Ω–∞—è –≥–∏–ø–µ—Ä–ø–ª–∞–∑–∏—è',
          type: 'radio',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 40, label: '–î–∞' }
          ],
          required: true
        }
      ],
      calculate: (values) => {
        const baselineRisk = getBaselineBreastCancerRisk(values.age);
        const riskFactors = [
          values.ageFirstMenstruation || 0,
          values.ageFirstBirth || 0,
          values.relativesWithBreastCancer || 0,
          values.biopsies || 0,
          values.atypicalHyperplasia || 0
        ];
        
        const totalRiskScore = riskFactors.reduce((sum, factor) => sum + factor, 0);
        const fiveYearRisk = (baselineRisk * (1 + totalRiskScore / 100)) * 5;
        const lifetimeRisk = fiveYearRisk * 4.5; // –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ
        
        let riskLevel: 'low' | 'moderate' | 'high' | 'very-high' = 'low';
        if (fiveYearRisk >= 3.0) riskLevel = 'very-high';
        else if (fiveYearRisk >= 2.0) riskLevel = 'high';
        else if (fiveYearRisk >= 1.5) riskLevel = 'moderate';
        
        return {
          value: fiveYearRisk.toFixed(2),
          interpretation: `5-–ª–µ—Ç–Ω–∏–π —Ä–∏—Å–∫: ${fiveYearRisk.toFixed(2)}%, –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ä–∏—Å–∫: ${lifetimeRisk.toFixed(1)}%`,
          riskLevel,
          recommendations: getGailRecommendations(riskLevel, fiveYearRisk),
          references: ['Gail MH et al. J Natl Cancer Inst. 1989;81(24):1879-86']
        };
      }
    },

    // ========== FRAX - –†–ò–°–ö –ü–ï–†–ï–õ–û–ú–û–í ==========
    {
      id: 'frax-calculator',
      title: 'FRAX - –†–∏—Å–∫ –æ—Å—Ç–µ–æ–ø–æ—Ä–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–ª–æ–º–æ–≤',
      description: '10-–ª–µ—Ç–Ω–∏–π —Ä–∏—Å–∫ –ø–µ—Ä–µ–ª–æ–º–æ–≤ –±–µ–¥—Ä–∞ –∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ—Å—Ç–µ–æ–ø–æ—Ä–æ—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–ª–æ–º–æ–≤',
      category: 'bone-health',
      icon: 'ü¶¥',
      isPopular: true,
      menopauseRelevance: 5,
      tags: ['–æ—Å—Ç–µ–æ–ø–æ—Ä–æ–∑', '–ø–µ—Ä–µ–ª–æ–º—ã', '–∫–æ—Å—Ç–∏', '–º–µ–Ω–æ–ø–∞—É–∑–∞'],
      inputs: [
        {
          id: 'age',
          label: '–í–æ–∑—Ä–∞—Å—Ç',
          type: 'number',
          unit: '–ª–µ—Ç',
          min: 40,
          max: 90,
          required: true
        },
        {
          id: 'sex',
          label: '–ü–æ–ª',
          type: 'radio',
          options: [
            { value: 'female', label: '–ñ–µ–Ω—Å–∫–∏–π' },
            { value: 'male', label: '–ú—É–∂—Å–∫–æ–π' }
          ],
          required: true
        },
        {
          id: 'weight',
          label: '–í–µ—Å',
          type: 'number',
          unit: '–∫–≥',
          min: 30,
          max: 200,
          required: true
        },
        {
          id: 'height',
          label: '–†–æ—Å—Ç',
          type: 'number',
          unit: '—Å–º',
          min: 100,
          max: 220,
          required: true
        },
        {
          id: 'previousFracture',
          label: '–ü–µ—Ä–µ–ª–æ–º—ã –≤ –∞–Ω–∞–º–Ω–µ–∑–µ –ø–æ—Å–ª–µ 50 –ª–µ—Ç',
          type: 'radio',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 1, label: '–î–∞' }
          ],
          required: true
        },
        {
          id: 'parentFracture',
          label: '–ü–µ—Ä–µ–ª–æ–º –±–µ–¥—Ä–∞ —É —Ä–æ–¥–∏—Ç–µ–ª–µ–π',
          type: 'radio',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 1, label: '–î–∞' }
          ],
          required: true
        },
        {
          id: 'smoking',
          label: '–ö—É—Ä–µ–Ω–∏–µ',
          type: 'radio',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 1, label: '–î–∞' }
          ],
          required: true
        },
        {
          id: 'alcohol',
          label: '–ê–ª–∫–æ–≥–æ–ª—å ‚â•3 –µ–¥–∏–Ω–∏—Ü –≤ –¥–µ–Ω—å',
          type: 'radio',
          options: [
            { value: 0, label: '–ù–µ—Ç' },
            { value: 1, label: '–î–∞' }
          ],
          required: true
        }
      ],
      calculate: (values) => {
        const bmi = values.weight / ((values.height / 100) ** 2);
        
        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ FRAX –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        let baseRisk = values.sex === 'female' ? 
          Math.max(0, (values.age - 50) * 0.4) : 
          Math.max(0, (values.age - 50) * 0.2);
        
        // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏
        if (bmi < 20) baseRisk *= 1.5;
        if (bmi > 30) baseRisk *= 0.8;
        if (values.previousFracture) baseRisk *= 1.8;
        if (values.parentFracture) baseRisk *= 1.4;
        if (values.smoking) baseRisk *= 1.3;
        if (values.alcohol) baseRisk *= 1.2;
        
        const majorFractureRisk = Math.min(baseRisk, 50);
        const hipFractureRisk = majorFractureRisk * 0.3;
        
        let riskLevel: 'low' | 'moderate' | 'high' | 'very-high' = 'low';
        if (majorFractureRisk >= 20) riskLevel = 'very-high';
        else if (majorFractureRisk >= 10) riskLevel = 'high';
        else if (majorFractureRisk >= 5) riskLevel = 'moderate';
        
        return {
          value: majorFractureRisk.toFixed(1),
          interpretation: `10-–ª–µ—Ç–Ω–∏–π —Ä–∏—Å–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–ª–æ–º–æ–≤: ${majorFractureRisk.toFixed(1)}%, –ø–µ—Ä–µ–ª–æ–º–æ–≤ –±–µ–¥—Ä–∞: ${hipFractureRisk.toFixed(1)}%`,
          riskLevel,
          recommendations: getFraxRecommendations(riskLevel, majorFractureRisk),
          references: ['WHO FRAX Calculator', 'Kanis JA et al. Osteoporos Int. 2008']
        };
      }
    },

    // ========== HOMA-IR ==========
    {
      id: 'homa-ir',
      title: 'HOMA-IR - –ò–Ω–¥–µ–∫—Å –∏–Ω—Å—É–ª–∏–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏',
      description: '–û—Ü–µ–Ω–∫–∞ –∏–Ω—Å—É–ª–∏–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –∏ —Ä–∏—Å–∫–∞ –¥–∏–∞–±–µ—Ç–∞',
      category: 'endocrinology',
      icon: 'üìä',
      isPopular: true,
      menopauseRelevance: 4,
      tags: ['–∏–Ω—Å—É–ª–∏–Ω–æ—Ä–µ–∑–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å', '–¥–∏–∞–±–µ—Ç', '–º–µ—Ç–∞–±–æ–ª–∏–∑–º', 'HOMA-IR'],
      inputs: [
        {
          id: 'glucose',
          label: '–ì–ª—é–∫–æ–∑–∞ –Ω–∞—Ç–æ—â–∞–∫',
          type: 'number',
          unit: '–º–º–æ–ª—å/–ª',
          min: 2.0,
          max: 20.0,
          step: 0.1,
          required: true
        },
        {
          id: 'insulin',
          label: '–ò–Ω—Å—É–ª–∏–Ω –Ω–∞—Ç–æ—â–∞–∫',
          type: 'number',
          unit: '–º–∫–ï–¥/–º–ª',
          min: 1.0,
          max: 100.0,
          step: 0.1,
          required: true
        }
      ],
      calculate: (values) => {
        const { glucose, insulin } = values;
        
        // HOMA-IR = (–ì–ª—é–∫–æ–∑–∞ * –ò–Ω—Å—É–ª–∏–Ω) / 22.5
        const homaIR = (glucose * insulin) / 22.5;
        
        let insulinResistanceStatus = 'normal';
        let riskLevel: 'low' | 'moderate' | 'high' | 'very-high' = 'low';
        
        if (homaIR >= 5.0) {
          insulinResistanceStatus = 'severe';
          riskLevel = 'very-high';
        } else if (homaIR >= 2.7) {
          insulinResistanceStatus = 'moderate';
          riskLevel = 'high';
        } else if (homaIR >= 2.0) {
          insulinResistanceStatus = 'mild';
          riskLevel = 'moderate';
        }
        
        return {
          value: homaIR.toFixed(2),
          interpretation: `HOMA-IR: ${homaIR.toFixed(2)} (–Ω–æ—Ä–º–∞ <2.0). –°—Ç–∞—Ç—É—Å: ${insulinResistanceStatus}`,
          riskLevel,
          recommendations: getHomaIRRecommendations(insulinResistanceStatus, homaIR),
          references: ['Matthews DR et al. Diabetologia. 1985', 'Wallace TM et al. Diabetes Care. 2004']
        };
      }
    }
  ];
}

// ========== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========

function getBaselineBreastCancerRisk(age: number): number {
  if (age < 40) return 0.1;
  if (age < 50) return 0.5;
  if (age < 60) return 1.2;
  if (age < 70) return 2.0;
  return 3.0;
}

function getGailRecommendations(riskLevel: string, fiveYearRisk: number): string[] {
  const recommendations = [];
  
  if (riskLevel === 'very-high') {
    recommendations.push('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ–Ω–∫–æ–ª–æ–≥–∞-–º–∞–º–º–æ–ª–æ–≥–∞');
    recommendations.push('–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ —Ö–∏–º–∏–æ–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏ (—Ç–∞–º–æ–∫—Å–∏—Ñ–µ–Ω)');
    recommendations.push('–ú–†–¢ –º–æ–ª–æ—á–Ω—ã—Ö –∂–µ–ª–µ–∑ –µ–∂–µ–≥–æ–¥–Ω–æ');
    recommendations.push('–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤');
  } else if (riskLevel === 'high') {
    recommendations.push('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ–Ω–∫–æ–ª–æ–≥–∞');
    recommendations.push('–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –∫–∞–∂–¥—ã–µ 12 –º–µ—Å—è—Ü–µ–≤');
    recommendations.push('–£–ó–ò –º–æ–ª–æ—á–Ω—ã—Ö –∂–µ–ª–µ–∑ –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤');
  } else if (riskLevel === 'moderate') {
    recommendations.push('–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è –µ–∂–µ–≥–æ–¥–Ω–æ');
    recommendations.push('–°–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –µ–∂–µ–º–µ—Å—è—á–Ω–æ');
  } else {
    recommendations.push('–ú–∞–º–º–æ–≥—Ä–∞—Ñ–∏—è —Å–æ–≥–ª–∞—Å–Ω–æ —Å–∫—Ä–∏–Ω–∏–Ω–≥–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ');
    recommendations.push('–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏');
  }
  
  return recommendations;
}

function getFraxRecommendations(riskLevel: string, majorFractureRisk: number): string[] {
  const recommendations = [];
  
  if (riskLevel === 'very-high') {
    recommendations.push('–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –Ω–∞—á–∞–ª–æ –∞–Ω—Ç–∏–æ—Å—Ç–µ–æ–ø–æ—Ä–æ—Ç–∏—á–µ—Å–∫–æ–π —Ç–µ—Ä–∞–ø–∏–∏');
    recommendations.push('DEXA-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
    recommendations.push('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∞');
    recommendations.push('–ö–æ—Ä—Ä–µ–∫—Ü–∏—è –¥–µ—Ñ–∏—Ü–∏—Ç–∞ –≤–∏—Ç–∞–º–∏–Ω–∞ D –∏ –∫–∞–ª—å—Ü–∏—è');
  } else if (riskLevel === 'high') {
    recommendations.push('–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–æ–π —Ç–µ—Ä–∞–ø–∏–∏');
    recommendations.push('DEXA-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
    recommendations.push('–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞ –ø–∞–¥–µ–Ω–∏–π');
  } else if (riskLevel === 'moderate') {
    recommendations.push('DEXA-—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è');
    recommendations.push('–ö–æ—Ä—Ä–µ–∫—Ü–∏—è —Ñ–∞–∫—Ç–æ—Ä–æ–≤ —Ä–∏—Å–∫–∞');
    recommendations.push('–ê–¥–µ–∫–≤–∞—Ç–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∫–∞–ª—å—Ü–∏—è –∏ –≤–∏—Ç–∞–º–∏–Ω–∞ D');
  } else {
    recommendations.push('–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã');
    recommendations.push('–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å');
    recommendations.push('–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ');
  }
  
  return recommendations;
}

function getHomaIRRecommendations(status: string, homaIR: number): string[] {
  const recommendations = [];
  
  if (status === 'severe') {
    recommendations.push('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∞');
    recommendations.push('–°–∫—Ä–∏–Ω–∏–Ω–≥ —Å–∞—Ö–∞—Ä–Ω–æ–≥–æ –¥–∏–∞–±–µ—Ç–∞');
    recommendations.push('–ú–µ—Ç—Ñ–æ—Ä–º–∏–Ω –ø–æ –ø–æ–∫–∞–∑–∞–Ω–∏—è–º');
    recommendations.push('–°—Ç—Ä–æ–≥–∞—è –¥–∏–µ—Ç–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —É–≥–ª–µ–≤–æ–¥–æ–≤');
  } else if (status === 'moderate') {
    recommendations.push('–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —ç–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∞');
    recommendations.push('–ù–∏–∑–∫–æ—É–≥–ª–µ–≤–æ–¥–Ω–∞—è –¥–∏–µ—Ç–∞');
    recommendations.push('–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    recommendations.push('–ö–æ–Ω—Ç—Ä–æ–ª—å –º–∞—Å—Å—ã —Ç–µ–ª–∞');
  } else if (status === 'mild') {
    recommendations.push('–ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏');
    recommendations.push('–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞');
    recommendations.push('–†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏');
  } else {
    recommendations.push('–ò–Ω—Å—É–ª–∏–Ω–æ–≤–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ');
    recommendations.push('–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏');
  }
  
  return recommendations;
}
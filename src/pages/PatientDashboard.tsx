import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '@/context/AuthContext';
import { PatientLayout } from '@/components/layout/PatientLayout';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Badge } from '@/components/ui/badge';
import { 
  Activity, 
  Calendar, 
  MessageSquare, 
  TrendingUp, 
  Heart,
  FileText,
  Users,
  Plus,
  Brain,
  Stethoscope,
  Sparkles,
  Leaf,
  Database,
  Clock,
  BarChart3,
  Utensils,
  Moon,
  Smartphone
} from 'lucide-react';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale';
import { healthDataAggregator, HealthDataTimelineEntry } from '@/services/healthDataAggregator';
import { wearableIntegration } from '@/services/wearableIntegration';

interface HealthStats {
  totalEntries: number;
  symptomEntries: number;
  nutritionEntries: number;
  wearableEntries: number;
  daysWithData: number;
  lastEntry?: string;
  dataCompleteness: number;
}

const PatientDashboard = () => {
  const navigate = useNavigate();
  const { user } = useAuth();
  const [healthStats, setHealthStats] = useState<HealthStats | null>(null);
  const [recentEvents, setRecentEvents] = useState<HealthDataTimelineEntry[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  
  // ‚úÖ –ù–û–í–û–ï: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
  const onboardingData = user?.onboardingData || 
                        JSON.parse(localStorage.getItem('onboardingData') || '{}');
  
  const menopausePhase = onboardingData?.phaseResult?.phase || 
                        onboardingData?.formData?.menopausePhase ||
                        user?.menopausePhase;
  
  const breadcrumbs = [
    { label: '–ì–ª–∞–≤–Ω–∞—è' }
  ];

  useEffect(() => {
    loadHealthData();
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    wearableIntegration.setupAutoSync();
  }, []);

  const loadHealthData = async () => {
    try {
      setIsLoading(true);
      
      // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–Ω–Ω—ã—Ö
      const stats = healthDataAggregator.getDataStats();
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ—Ç—É –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ 30 –∑–∞–ø–∏—Å–µ–π –∑–∞ –º–µ—Å—è—Ü)
      const dataCompleteness = Math.min(100, (stats.totalEntries / 30) * 100);
      
      setHealthStats({
        ...stats,
        dataCompleteness
      });
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
      const timeline = healthDataAggregator.getTimeline(7);
      setRecentEvents(timeline.slice(0, 5)); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–±—ã—Ç–∏–π
      
    } catch (error) {
      console.error('Error loading health data:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const getEventIcon = (type: string) => {
    switch (type) {
      case 'symptom':
        return <Heart className="h-4 w-4 text-red-500" />;
      case 'nutrition':
        return <Utensils className="h-4 w-4 text-green-500" />;
      case 'wearable':
        return <Smartphone className="h-4 w-4 text-blue-500" />;
      case 'weather':
        return <Activity className="h-4 w-4 text-yellow-500" />;
      default:
        return <Clock className="h-4 w-4 text-gray-500" />;
    }
  };

  const getEventDescription = (event: HealthDataTimelineEntry) => {
    switch (event.type) {
      case 'symptom':
        const symptomData = event.data as any;
        return `–ó–∞–ø–∏—Å–∞–Ω—ã —Å–∏–º–ø—Ç–æ–º—ã: ${symptomData.symptoms?.slice(0, 2).join(', ') || '–¥–∞–Ω–Ω—ã–µ –æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–∏'}`;
      case 'nutrition':
        return '–î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –æ –ø–∏—Ç–∞–Ω–∏–∏';
      case 'wearable':
        const wearableData = event.data as any;
        return `–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ: ${wearableData.steps ? `${wearableData.steps} —à–∞–≥–æ–≤` : '–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Å–æ–Ω'}`;
      case 'weather':
        return '–°–æ–±—Ä–∞–Ω—ã —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ';
      default:
        return '–î–∞–Ω–Ω—ã–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ';
    }
  };

  const getCompletenessLevel = (percentage: number) => {
    if (percentage >= 80) return { level: 'excellent', color: 'text-green-600', text: '–û—Ç–ª–∏—á–Ω–∞—è' };
    if (percentage >= 60) return { level: 'good', color: 'text-blue-600', text: '–•–æ—Ä–æ—à–∞—è' };
    if (percentage >= 40) return { level: 'fair', color: 'text-yellow-600', text: '–£–¥–æ–≤–ª–µ—Ç–≤.' };
    return { level: 'poor', color: 'text-red-600', text: '–ù–∏–∑–∫–∞—è' };
  };

  const handleQuickAction = (action: string) => {
    switch (action) {
      case 'symptoms':
        navigate('/patient/symptoms');
        break;
      case 'cycle':
        navigate('/patient/cycle');
        break;
      case 'nutrition':
        navigate('/patient/nutrition');
        break;
      case 'sleep':
        navigate('/patient/sleep-dashboard');
        break;
      case 'data-sources':
        navigate('/patient/data-sources');
        break;
      case 'insights':
        navigate('/patient/insights');
        break;
      case 'ai-chat':
        navigate('/patient/ai-chat');
        break;
      case 'doctors':
        navigate('/patient/doctors');
        break;
      case 'community':
        navigate('/patient/community');
        break;
      case 'documents':
        navigate('/patient/documents');
        break;
    }
  };

  return (
    <PatientLayout breadcrumbs={breadcrumbs}>
      <div className="space-y-8 bg-gradient-to-br from-background via-accent/5 to-muted/20 min-h-screen -m-6 p-6">
        {/* Welcome Section */}
        <div className="relative overflow-hidden bg-gradient-to-br from-primary/80 via-primary/90 to-primary/70 p-8 rounded-3xl text-white shadow-elegant">
          {/* Soft decorative elements */}
          <div className="absolute inset-0 opacity-20">
            <div className="absolute top-4 right-4 w-24 h-24 bg-white/20 rounded-full blur-xl"></div>
            <div className="absolute bottom-4 left-4 w-32 h-32 bg-white/10 rounded-full blur-2xl"></div>
          </div>
          
          <div className="relative z-10 flex items-center space-x-6">
            <div className="p-4 bg-white/20 rounded-full animate-gentle-float backdrop-blur-sm">
              <Heart className="h-10 w-10 text-white animate-pulse" />
            </div>
            <div className="flex-1">
              <h1 className="text-3xl font-bold mb-2">
                –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ bloom, {user?.firstName || '–¥–æ—Ä–æ–≥–∞—è'}! üå∏
              </h1>
              <p className="text-white/95 text-lg leading-relaxed">
                –°–µ–≥–æ–¥–Ω—è ‚Äî –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –∑–∞–±–æ—Ç—ã –æ —Å–µ–±–µ
              </p>
              
              {/* ‚úÖ –ù–û–í–û–ï: –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ */}
              {menopausePhase && (
                <div className="mt-3 p-3 bg-white/20 rounded-xl backdrop-blur-sm">
                  <p className="text-white/90 text-sm font-medium">
                    üéØ –í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Ñ–∞–∑–∞: {menopausePhase}
                  </p>
                  <p className="text-white/80 text-xs mt-1">
                    –í–∞—à–∞ –ø–∞–Ω–µ–ª—å –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
                  </p>
                </div>
              )}
              
              <p className="text-white/80 text-sm mt-2 italic">
                –ú—ã —Ä—è–¥–æ–º —Å –≤–∞–º–∏ –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –≤–∞—à–µ–≥–æ –ø—É—Ç–∏ –∫ –∑–¥–æ—Ä–æ–≤—å—é
              </p>
            </div>
          </div>
        </div>

        {/* Health Data Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <Card className="bg-gradient-to-br from-card to-accent/10 border-primary/20 shadow-elegant hover:shadow-soft transition-all duration-300 hover:scale-105">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">
                –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π
              </CardTitle>
              <Database className="h-4 w-4 text-primary animate-pulse" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-foreground">
                {isLoading ? '...' : healthStats?.totalEntries || 0}
              </div>
              <p className="text-xs text-muted-foreground">
                {healthStats?.daysWithData || 0} –¥–Ω–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ üìä
              </p>
            </CardContent>
          </Card>

          <Card className="bg-gradient-to-br from-card to-accent/10 border-primary/20 shadow-elegant hover:shadow-soft transition-all duration-300 hover:scale-105">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">
                –ó–∞–ø–∏—Å–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤
              </CardTitle>
              <Heart className="h-4 w-4 text-primary animate-pulse" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-foreground">
                {isLoading ? '...' : healthStats?.symptomEntries || 0}
              </div>
              <p className="text-xs text-muted-foreground">
                –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è üí™
              </p>
            </CardContent>
          </Card>

          <Card className="bg-gradient-to-br from-card to-accent/10 border-primary/20 shadow-elegant hover:shadow-soft transition-all duration-300 hover:scale-105">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground">
                –î–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
              </CardTitle>
              <Smartphone className="h-4 w-4 text-primary animate-pulse" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-foreground">
                {isLoading ? '...' : healthStats?.wearableEntries || 0}
              </div>
              <p className="text-xs text-muted-foreground">
                –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ—Ä üîÑ
              </p>
            </CardContent>
          </Card>

          <Card className="bg-gradient-to-br from-card to-accent/10 border-primary/20 shadow-elegant hover:shadow-soft transition-all duration-300 hover:scale-105">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-muted-foreground flex items-center gap-2">
                –ü–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
                {healthStats && (
                  <Badge variant="secondary" className={getCompletenessLevel(healthStats.dataCompleteness).color}>
                    {getCompletenessLevel(healthStats.dataCompleteness).text}
                  </Badge>
                )}
              </CardTitle>
              <BarChart3 className="h-4 w-4 text-primary animate-pulse" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-foreground">
                {isLoading ? '...' : `${healthStats?.dataCompleteness.toFixed(0) || 0}%`}
              </div>
              <Progress 
                value={healthStats?.dataCompleteness || 0} 
                className="mt-2 h-2"
              />
            </CardContent>
          </Card>
        </div>

        {/* Main Content Grid */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Recent Health Events */}
          <Card className="bg-card/90 backdrop-blur-sm border-primary/20 shadow-elegant">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <TrendingUp className="h-5 w-5 text-primary" />
                <span className="text-foreground">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è</span>
              </CardTitle>
              <CardDescription className="text-muted-foreground">
                –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ –∑–∞–±–æ—Ç–µ –æ –∑–¥–æ—Ä–æ–≤—å–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {isLoading ? (
                  <div className="space-y-3">
                    {Array.from({ length: 3 }, (_, i) => (
                      <div key={i} className="animate-pulse">
                        <div className="flex items-center space-x-3 p-4">
                          <div className="w-3 h-3 bg-gray-300 rounded-full"></div>
                          <div className="flex-1 space-y-2">
                            <div className="h-4 bg-gray-300 rounded w-3/4"></div>
                            <div className="h-3 bg-gray-200 rounded w-1/2"></div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : recentEvents.length > 0 ? (
                  recentEvents.map((event, index) => (
                    <div key={event.id} className="flex items-center space-x-3 p-4 bg-primary/10 rounded-2xl transition-all duration-300 hover:bg-primary/15">
                      {getEventIcon(event.type)}
                      <div className="flex-1">
                        <p className="text-sm font-medium text-foreground">
                          {getEventDescription(event)}
                        </p>
                        <p className="text-xs text-muted-foreground">
                          {format(new Date(event.timestamp), 'd MMM, HH:mm', { locale: ru })} ‚Ä¢ 
                          –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üåü
                        </p>
                      </div>
                    </div>
                  ))
                ) : (
                  <div className="text-center py-8 text-muted-foreground">
                    <Activity className="h-12 w-12 mx-auto mb-4 opacity-50" />
                    <p className="text-sm">–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π</p>
                    <p className="text-xs">–ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏–º–ø—Ç–æ–º–æ–≤ –∏–ª–∏ –ø–∏—Ç–∞–Ω–∏—è</p>
                  </div>
                )}
                
                {recentEvents.length > 0 && (
                  <Button 
                    variant="ghost" 
                    size="sm" 
                    onClick={() => navigate('/patient/data-sources')}
                    className="w-full mt-4"
                  >
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                  </Button>
                )}
              </div>
            </CardContent>
          </Card>

          {/* Data Quality Progress */}
          <Card className="bg-card/90 backdrop-blur-sm border-primary/20 shadow-elegant">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <BarChart3 className="h-5 w-5 text-primary animate-gentle-float" />
                <span className="text-foreground">–ö–∞—á–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö</span>
              </CardTitle>
              <CardDescription className="text-muted-foreground">
                –ß–µ–º –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö, —Ç–µ–º —Ç–æ—á–Ω–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏! üéØ
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="space-y-6">
                {healthStats && (
                  <div className="p-4 bg-gradient-to-r from-primary/10 to-accent/10 rounded-2xl">
                    <p className="text-sm text-primary font-medium mb-2">
                      –û–±—â–∞—è –ø–æ–ª–Ω–æ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö: {healthStats.dataCompleteness.toFixed(0)}%
                    </p>
                    <p className="text-xs text-muted-foreground italic">
                      {healthStats.dataCompleteness >= 80 
                        ? "–û—Ç–ª–∏—á–Ω–∞—è –±–∞–∑–∞ –¥–ª—è –ò–ò-–∞–Ω–∞–ª–∏–∑–∞! –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ—á–Ω—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤ üéâ"
                        : healthStats.dataCompleteness >= 60
                        ? "–•–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ! –î–æ–±–∞–≤—å—Ç–µ –µ—â–µ –Ω–µ–º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π üìà"
                        : "–ù–∞—á–Ω–∏—Ç–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ ‚Äî –∫–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å –¥–µ–ª–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç–æ—á–Ω–µ–µ üå±"
                      }
                    </p>
                  </div>
                )}
                
                <div>
                  <div className="flex justify-between text-sm mb-3">
                    <span className="text-foreground flex items-center gap-2">
                      –°–∏–º–ø—Ç–æ–º—ã –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ <Heart className="h-4 w-4 text-primary" />
                    </span>
                    <span className="font-medium text-primary">
                      {healthStats?.symptomEntries || 0} –∑–∞–ø–∏—Å–µ–π
                    </span>
                  </div>
                  <Progress 
                    value={Math.min(100, ((healthStats?.symptomEntries || 0) / 30) * 100)} 
                    className="h-3" 
                  />
                </div>
                
                <div>
                  <div className="flex justify-between text-sm mb-3">
                    <span className="text-foreground flex items-center gap-2">
                      –î–∞–Ω–Ω—ã–µ –Ω–æ—Å–∏–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ <Smartphone className="h-4 w-4 text-primary" />
                    </span>
                    <span className="font-medium text-primary">
                      {healthStats?.wearableEntries || 0} –¥–Ω–µ–π
                    </span>
                  </div>
                  <Progress 
                    value={Math.min(100, ((healthStats?.wearableEntries || 0) / 30) * 100)} 
                    className="h-3" 
                  />
                </div>
                
                <div>
                  <div className="flex justify-between text-sm mb-3">
                    <span className="text-foreground flex items-center gap-2">
                      –ü–∏—Ç–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–∫–∏ <Utensils className="h-4 w-4 text-primary" />
                    </span>
                    <span className="font-medium text-primary">
                      {healthStats?.nutritionEntries || 0} –∑–∞–ø–∏—Å–µ–π
                    </span>
                  </div>
                  <Progress 
                    value={Math.min(100, ((healthStats?.nutritionEntries || 0) / 90) * 100)} 
                    className="h-3" 
                  />
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Quick Actions */}
        <Card className="bg-card/90 backdrop-blur-sm border-primary/20 shadow-elegant">
          <CardHeader>
            <CardTitle className="text-foreground flex items-center gap-2">
              <Leaf className="h-5 w-5 text-primary" />
              –ú–æ–π —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∫ —Å–µ–±–µ
            </CardTitle>
            <CardDescription className="text-muted-foreground">
              –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è –≤–∞—à–µ–º—É —Å–µ—Ä–¥—Ü—É —Å–µ–≥–æ–¥–Ω—è
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
              <Button
                variant="outline"
                onClick={() => handleQuickAction('symptoms')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Plus className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–°–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('cycle')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Calendar className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–ú–æ–π —Ü–∏–∫–ª –∏ –≥–æ—Ä–º–æ–Ω—ã</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('nutrition')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Utensils className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('sleep')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Moon className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–ê–Ω–∞–ª–∏–∑ —Å–Ω–∞</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('data-sources')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Database className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–ú–æ–∏ –¥–∞–Ω–Ω—ã–µ</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('insights')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Brain className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–ú–æ–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('ai-chat')}  
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <MessageSquare className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–°–ø—Ä–æ—Å–∏—Ç—å —Å–æ–≤–µ—Ç —É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ Eva</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('community')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Users className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç –∂–µ–Ω—â–∏–Ω</span>
              </Button>
              
              <Button
                variant="outline"
                onClick={() => handleQuickAction('doctors')}
                className="h-auto py-6 px-3 flex flex-col items-center space-y-3 border-primary/20 bg-gradient-to-b from-card to-accent/10 hover:bg-gradient-to-b hover:from-primary/10 hover:to-accent/20 transition-all duration-300 hover:scale-105 hover:shadow-soft rounded-2xl min-h-[120px]"
              >
                <Stethoscope className="h-6 w-6 text-primary flex-shrink-0" />
                <span className="text-xs text-center leading-tight break-words hyphens-auto">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –≤—Ä–∞—á—É</span>
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    </PatientLayout>
  );
};

export default PatientDashboard;
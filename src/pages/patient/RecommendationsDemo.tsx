import React from 'react';
import { Bell, Zap, Target, Clock } from 'lucide-react';
import { useBasicNotifications } from '../../contexts/BasicNotificationContext';
import { SimpleNotification } from '../../components/notifications/SimpleNotification';
import { NotificationSystem } from '../../components/notifications/NotificationSystem';

export const RecommendationsDemo: React.FC = () => {
  const {
    notifications,
    currentRecommendation,
    showNotification,
    dismissNotification,
    triggerRecommendation,
    clearAllNotifications
  } = useBasicNotifications();

  const handleNotificationAction = (action: string) => {
    console.log('–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ:', action);
    dismissNotification();
  };

  return (
    <div className="max-w-4xl mx-auto p-6 bg-gray-50 min-h-screen">
      {/* –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
      <div className="fixed top-4 right-4 z-50">
        <NotificationSystem />
      </div>
      
      <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
        <h1 className="text-2xl font-bold text-gray-800 mb-2">
          –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π Eva - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
        </h1>
        <p className="text-gray-600">
          –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å —Ü–µ–Ω—Ç—Ä–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
        </p>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="flex items-center mb-4">
            <Bell className="text-blue-500 mr-3" size={24} />
            <h3 className="font-semibold text-lg">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
          </div>
          <div className="text-2xl font-bold text-gray-800">
            {notifications.length}
          </div>
          <p className="text-sm text-gray-600">–í—Å–µ–≥–æ —Å–µ–≥–æ–¥–Ω—è</p>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="flex items-center mb-4">
            <Target className="text-green-500 mr-3" size={24} />
            <h3 className="font-semibold text-lg">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h3>
          </div>
          <div className="text-2xl font-bold text-gray-800">
            {Math.floor(notifications.length * 0.4)}
          </div>
          <p className="text-sm text-gray-600">–í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–π</p>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="flex items-center mb-4">
            <Clock className="text-purple-500 mr-3" size={24} />
            <h3 className="font-semibold text-lg">–°–ª–µ–¥—É—é—â–µ–µ</h3>
          </div>
          <div className="text-lg font-bold text-gray-800">
            –ß–µ—Ä–µ–∑ 15 –º–∏–Ω
          </div>
          <p className="text-sm text-gray-600">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤–æ–¥–µ</p>
        </div>
      </div>

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h3 className="font-semibold text-lg mb-4">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏</h3>
        <div className="bg-blue-50 p-4 rounded-lg mb-4">
          <p className="text-sm text-blue-800">
            üí° –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–∫–ª—é—á–∞–µ—Ç —Ü–µ–Ω—Ç—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π, –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
          </p>
        </div>
        <div className="flex space-x-4">
          <button
            onClick={triggerRecommendation}
            className="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 transition-colors flex items-center space-x-2"
          >
            <Zap size={16} />
            <span>–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é</span>
          </button>
          <button
            onClick={clearAllNotifications}
            className="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 transition-colors"
          >
            –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ
          </button>
        </div>
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
      <div className="bg-white rounded-lg shadow-md p-6">
        <h3 className="font-semibold text-lg mb-4">–ò—Å—Ç–æ—Ä–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
        {notifications.length === 0 ? (
          <p className="text-gray-500 text-center py-8">
            –ü–æ–∫–∞ –Ω–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
          </p>
        ) : (
          <div className="space-y-3">
            {notifications.map((notification, index) => (
              <div key={notification.id} className="border border-gray-200 rounded-lg p-4">
                <div className="flex items-start space-x-3">
                  <div className="text-lg">{notification.icon}</div>
                  <div className="flex-1">
                    <div className="flex items-center justify-between mb-1">
                      <h4 className="font-medium text-gray-800">
                        {notification.title}
                      </h4>
                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                        notification.priority === 'high' ? 'bg-red-100 text-red-800' :
                        notification.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-blue-100 text-blue-800'
                      }`}>
                        {notification.priority === 'high' ? '–í–∞–∂–Ω–æ' : 
                         notification.priority === 'medium' ? '–°—Ä–µ–¥–Ω–µ' : '–ò–Ω—Ñ–æ'}
                      </span>
                    </div>
                    <p className="text-sm text-gray-600 mb-2">
                      {notification.message}
                    </p>
                    <p className="text-xs text-gray-500">
                      {notification.triggerTime.toLocaleTimeString('ru', { 
                        hour: '2-digit', 
                        minute: '2-digit' 
                      })}
                    </p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
      {showNotification && currentRecommendation && (
        <SimpleNotification
          recommendation={currentRecommendation}
          onDismiss={dismissNotification}
          onAction={handleNotificationAction}
          isVisible={showNotification}
        />
      )}
    </div>
  );
};
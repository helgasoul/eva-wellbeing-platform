import React, { useState, useMemo } from 'react';
import { PatientLayout } from '@/components/layout/PatientLayout';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Progress } from '@/components/ui/progress';
import { useFoodDiary } from '@/contexts/FoodDiaryContext';
import { useSubscription } from '@/context/SubscriptionContext';
import { 
  Calendar, 
  TrendingUp, 
  Plus, 
  Clock, 
  Utensils,
  Target,
  Trash2,
  Edit,
  ChefHat
} from 'lucide-react';
import type { DiaryEntry } from '@/components/nutrition/AddToDiaryModal';

const FoodDiary: React.FC = () => {
  const { currentPlan } = useSubscription();
  const { 
    diaryEntries, 
    removeDiaryEntry, 
    getEntriesForDate, 
    calculateDailyNutrients,
    getEntriesByMealType 
  } = useFoodDiary();
  
  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);

  const breadcrumbs = [
    { label: '–ì–ª–∞–≤–Ω–∞—è', href: '/patient/dashboard' },
    { label: '–î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è' }
  ];

  const todayEntries = getEntriesForDate(selectedDate);
  const dailyNutrients = calculateDailyNutrients(selectedDate);

  // –¶–µ–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤ (–ø—Ä–∏–º–µ—Ä–Ω—ã–µ)
  const targetNutrients = {
    calories: 1800,
    protein: 90,
    carbs: 225,
    fat: 60
  };

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π –ø–æ —Ç–∏–ø–∞–º –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏
  const groupedEntries = {
    breakfast: getEntriesByMealType(selectedDate, 'breakfast'),
    lunch: getEntriesByMealType(selectedDate, 'lunch'),
    dinner: getEntriesByMealType(selectedDate, 'dinner'),
    snack: getEntriesByMealType(selectedDate, 'snack')
  };

  const mealTypeLabels = {
    breakfast: { label: '–ó–∞–≤—Ç—Ä–∞–∫', icon: 'üåÖ' },
    lunch: { label: '–û–±–µ–¥', icon: '‚òÄÔ∏è' },
    dinner: { label: '–£–∂–∏–Ω', icon: 'üåô' },
    snack: { label: '–ü–µ—Ä–µ–∫—É—Å—ã', icon: 'ü•ú' }
  };

  const getNutrientProgress = (current: number, target: number) => {
    return Math.min((current / target) * 100, 100);
  };

  const handleDeleteEntry = (id: string) => {
    removeDiaryEntry(id);
  };

  const canUseAdvanced = currentPlan?.id === 'plus' || currentPlan?.id === 'optimum';

  return (
    <PatientLayout title="bloom - –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è" breadcrumbs={breadcrumbs}>
      <div className="caring-bg min-h-screen">
        <div className="max-w-7xl mx-auto space-y-8 py-4">
          {/* –¢–µ–ø–ª–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
          <div className="caring-card spacious-card super-rounded">
            <div className="flex items-center justify-between mb-6">
              <div className="flex items-center gap-8">
                <div className="w-20 h-20 bg-gradient-to-br from-primary/20 via-accent/20 to-secondary/20 super-rounded flex items-center justify-center animate-warm-glow">
                  <Utensils className="h-10 w-10 text-primary" />
                </div>
                <div>
                  <h1 className="text-4xl font-playfair font-bold text-foreground mb-3">
                    –î–Ω–µ–≤–Ω–∏–∫ –ø–∏—Ç–∞–Ω–∏—è ü•ó
                  </h1>
                  <p className="soft-text text-xl mb-2">
                    –ó–∞–±–æ—Ç–∏–º—Å—è –æ —Å–µ–±–µ –≤–º–µ—Å—Ç–µ: –æ—Ç–º–µ—á–∞–π—Ç–µ, —á—Ç–æ –∏ –∫–æ–≥–¥–∞ –≤—ã –µ–¥–∏—Ç–µ ‚Äî –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ª—ë–≥–∫–æ—Å—Ç–∏ –∏ –±–∞–ª–∞–Ω—Å–∞.
                  </p>
                  <p className="caring-text text-lg">
                    –ü–æ–º–Ω–∏—Ç–µ: –ø–∏—Ç–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –∑–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ, –∞ –Ω–µ –∫–æ–Ω—Ç—Ä–æ–ª—å. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –º—è–≥–∫–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –¥–æ–±—Ä—ã–µ —Å–æ–≤–µ—Ç—ã.
                  </p>
                </div>
              </div>
              <div className="flex items-center gap-4">
                <Input
                  type="date"
                  value={selectedDate}
                  onChange={(e) => setSelectedDate(e.target.value)}
                  className="w-44 super-rounded border-caring-mint/40 bg-caring-cream"
                />
              </div>
            </div>
          </div>
          
          {/* –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –±–∞–Ω–Ω–µ—Ä */}
          <div className="motivational-banner">
            <div className="flex items-center gap-4">
              <div className="text-3xl animate-gentle-wave">üå∏</div>
              <div>
                <p className="warm-text text-lg font-semibold">
                  "–ö–∞–∂–¥—ã–π –≤–∞—à —à–∞–≥ ‚Äî –≤–∫–ª–∞–¥ –≤ –∑–¥–æ—Ä–æ–≤—å–µ. –î–∞–∂–µ –µ—Å–ª–∏ –≤—ã –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ —Å—é–¥–∞ ‚Äî —ç—Ç–æ —É–∂–µ –∑–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ."
                </p>
              </div>
            </div>
          </div>

          {/* –°–≤–æ–¥–∫–∞ –ø–æ –Ω—É—Ç—Ä–∏–µ–Ω—Ç–∞–º */}
          <div className="gentle-card spacious-card super-rounded">
            <div className="flex items-center gap-3 mb-6">
              <Target className="h-8 w-8 text-primary animate-caring-pulse" />
              <div>
                <h2 className="text-2xl font-playfair font-bold text-foreground">
                  –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–µ–≥–æ–¥–Ω—è üìä
                </h2>
                <p className="soft-text">
                  –ú—è–≥–∫–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –±–∞–ª–∞–Ω—Å –Ω—É—Ç—Ä–∏–µ–Ω—Ç–æ–≤ ‚Äî –∫–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å –ø–æ–º–æ–≥–∞–µ—Ç –ª—É—á—à–µ —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ —Ç–µ–ª–æ
                </p>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {/* –ö–∞–ª–æ—Ä–∏–∏ */}
              <div className="personal-touch space-y-4">
                <div className="flex justify-between items-center">
                  <div className="flex items-center gap-2">
                    <span className="text-2xl">‚ö°</span>
                    <span className="font-semibold text-foreground">–≠–Ω–µ—Ä–≥–∏—è</span>
                  </div>
                  <span className="text-sm soft-text">
                    {dailyNutrients.calories}/{targetNutrients.calories}
                  </span>
                </div>
                <Progress 
                  value={getNutrientProgress(dailyNutrients.calories, targetNutrients.calories)} 
                  className="h-3 super-rounded"
                />
                <div className="text-center">
                  <div className="text-3xl font-bold text-primary">{dailyNutrients.calories}</div>
                  <div className="text-sm soft-text">–∫–∫–∞–ª</div>
                </div>
              </div>

              {/* –ë–µ–ª–∫–∏ */}
              <div className="personal-touch space-y-4">
                <div className="flex justify-between items-center">
                  <div className="flex items-center gap-2">
                    <span className="text-2xl">üí™</span>
                    <span className="font-semibold text-foreground">–ë–µ–ª–∫–∏</span>
                  </div>
                  <span className="text-sm soft-text">
                    {dailyNutrients.protein}/{targetNutrients.protein}
                  </span>
                </div>
                <Progress 
                  value={getNutrientProgress(dailyNutrients.protein, targetNutrients.protein)} 
                  className="h-3 super-rounded"
                />
                <div className="text-center">
                  <div className="text-3xl font-bold text-secondary">{dailyNutrients.protein}</div>
                  <div className="text-sm soft-text">–≥</div>
                </div>
              </div>

              {/* –£–≥–ª–µ–≤–æ–¥—ã */}
              <div className="personal-touch space-y-4">
                <div className="flex justify-between items-center">
                  <div className="flex items-center gap-2">
                    <span className="text-2xl">üåæ</span>
                    <span className="font-semibold text-foreground">–£–≥–ª–µ–≤–æ–¥—ã</span>
                  </div>
                  <span className="text-sm soft-text">
                    {dailyNutrients.carbs}/{targetNutrients.carbs}
                  </span>
                </div>
                <Progress 
                  value={getNutrientProgress(dailyNutrients.carbs, targetNutrients.carbs)} 
                  className="h-3 super-rounded"
                />
                <div className="text-center">
                  <div className="text-3xl font-bold text-accent">{dailyNutrients.carbs}</div>
                  <div className="text-sm soft-text">–≥</div>
                </div>
              </div>

              {/* –ñ–∏—Ä—ã */}
              <div className="personal-touch space-y-4">
                <div className="flex justify-between items-center">
                  <div className="flex items-center gap-2">
                    <span className="text-2xl">ü•ë</span>
                    <span className="font-semibold text-foreground">–ñ–∏—Ä—ã</span>
                  </div>
                  <span className="text-sm soft-text">
                    {dailyNutrients.fat}/{targetNutrients.fat}
                  </span>
                </div>
                <Progress 
                  value={getNutrientProgress(dailyNutrients.fat, targetNutrients.fat)} 
                  className="h-3 super-rounded"
                />
                <div className="text-center">
                  <div className="text-3xl font-bold caring-text">{dailyNutrients.fat}</div>
                  <div className="text-sm soft-text">–≥</div>
                </div>
              </div>
            </div>
          </div>

          {/* –ó–∞–ø–∏—Å–∏ –ø–æ —Ç–∏–ø–∞–º –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ */}
          <div className="space-y-8">
            {Object.entries(groupedEntries).map(([mealType, entries]) => (
              <div key={mealType} className="mint-card spacious-card super-rounded">
                <div className="flex items-center gap-3 mb-6">
                  <span className="text-3xl animate-gentle-wave">
                    {mealTypeLabels[mealType as keyof typeof mealTypeLabels].icon}
                  </span>
                  <div>
                    <h3 className="text-xl font-playfair font-bold text-foreground">
                      {mealTypeLabels[mealType as keyof typeof mealTypeLabels].label}
                    </h3>
                    <p className="soft-text text-sm">
                      {entries.length === 0 ? '–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π' : `${entries.length} –∑–∞–ø–∏—Å–µ–π`}
                    </p>
                  </div>
                </div>
                
                {entries.length === 0 ? (
                  <div className="empty-state">
                    <div className="text-6xl mb-4 animate-caring-pulse">üçΩÔ∏è</div>
                    <h4 className="text-lg font-semibold text-foreground mb-2">
                      –°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â—ë –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–º–µ—á–∞–ª–∏
                    </h4>
                    <p className="soft-text mb-4">
                      –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ: –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–∏—ë–º –ø–∏—â–∏, –∏ —è –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å.
                    </p>
                    <div className="flex gap-2 justify-center">
                      <span className="text-sm caring-text">üíö</span>
                      <span className="text-sm caring-text">–ö–∞–∂–¥—ã–π —à–∞–≥ –≤–∞–∂–µ–Ω</span>
                    </div>
                  </div>
                ) : (
                  <div className="space-y-4">
                    {entries.map((entry) => (
                      <div key={entry.id} className="personal-touch p-6 hover:shadow-caring transition-all duration-300">
                        <div className="flex items-center justify-between">
                          <div className="flex-1">
                            <div className="flex items-center gap-4 mb-3">
                              <span className="text-lg font-semibold text-foreground">{entry.name}</span>
                              {entry.source === 'recipe' && (
                                <Badge className="bg-gradient-to-r from-primary/20 to-accent/20 text-primary border-primary/20">
                                  –ò–∑ —Ä–µ—Ü–µ–ø—Ç–∞
                                </Badge>
                              )}
                              {entry.portionSize !== 1 && (
                                <Badge className="bg-gradient-to-r from-secondary/20 to-accent/20 text-secondary border-secondary/20">
                                  {entry.portionSize}x –ø–æ—Ä—Ü–∏—è
                                </Badge>
                              )}
                            </div>
                            
                            <div className="flex items-center gap-6 text-sm caring-text mb-3">
                              <span className="flex items-center gap-1">
                                <span className="text-lg">‚ö°</span>
                                {entry.calories} –∫–∫–∞–ª
                              </span>
                              <span className="flex items-center gap-1">
                                <span className="text-lg">üí™</span>
                                {entry.protein}–≥ –±–µ–ª–∫–∞
                              </span>
                              <span className="flex items-center gap-1">
                                <span className="text-lg">üåæ</span>
                                {entry.carbs}–≥ —É–≥–ª–µ–≤–æ–¥–æ–≤
                              </span>
                              <span className="flex items-center gap-1">
                                <span className="text-lg">ü•ë</span>
                                {entry.fat}–≥ –∂–∏—Ä–æ–≤
                              </span>
                            </div>
                            
                            {entry.benefits && entry.benefits.length > 0 && (
                              <div className="text-sm gentle-text">
                                <span className="text-lg mr-2">üåü</span>
                                –ü–æ–ª—å–∑–∞: {entry.benefits.slice(0, 3).join(', ')}
                              </div>
                            )}
                          </div>

                          <div className="flex items-center gap-3">
                            <div className="flex items-center gap-2 text-sm soft-text">
                              <Clock className="h-4 w-4" />
                              <span>{entry.time}</span>
                            </div>
                            <Button
                              onClick={() => handleDeleteEntry(entry.id)}
                              variant="ghost"
                              size="sm"
                              className="h-10 w-10 p-0 text-muted-foreground hover:text-destructive super-rounded"
                            >
                              <Trash2 className="h-4 w-4" />
                            </Button>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>

          {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div className="peach-card spacious-card super-rounded">
            <div className="flex items-center gap-3 mb-6">
              <Plus className="h-8 w-8 text-primary animate-caring-pulse" />
              <div>
                <h3 className="text-xl font-playfair font-bold text-foreground">
                  –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
                </h3>
                <p className="soft-text">
                  –î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–æ–≤–µ—Ç –ø–æ –ø–∏—Ç–∞–Ω–∏—é
                </p>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <Button
                onClick={() => window.location.href = '/patient/nutrition-plan'}
                className="btn-caring spacious-button"
              >
                <ChefHat className="h-6 w-6 mr-3" />
                –î–æ–±–∞–≤–∏—Ç—å –∏–∑ —Ä–µ—Ü–µ–ø—Ç–æ–≤
              </Button>
              <Button
                variant="outline"
                className="btn-gentle spacious-button"
                disabled={!canUseAdvanced}
              >
                <Plus className="h-6 w-6 mr-3" />
                {canUseAdvanced ? '–î–æ–±–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é' : '–†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ Plus'}
              </Button>
            </div>
          </div>
        </div>
      </div>
    </PatientLayout>
  );
};

export default FoodDiary;
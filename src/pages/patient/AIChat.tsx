
import React, { useState, useEffect, useRef } from 'react';
import { useAuth } from '@/context/AuthContext';
import { PatientLayout } from '@/components/layout/PatientLayout';
import { cn } from '@/lib/utils';

interface ChatMessage {
  id: string;
  type: 'user' | 'ai';
  content: string;
  timestamp: string;
  isTyping?: boolean;
}

interface QuickAction {
  id: string;
  text: string;
  prompt: string;
  icon: string;
}

const AIChat: React.FC = () => {
  const { user } = useAuth();
  const [messages, setMessages] = useState<ChatMessage[]>([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [isInitialized, setIsInitialized] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const inputRef = useRef<HTMLInputElement>(null);

  const breadcrumbs = [
    { label: '–ì–ª–∞–≤–Ω–∞—è', href: '/patient/dashboard' },
    { label: '–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫' }
  ];

  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const quickActions: QuickAction[] = [
    {
      id: 'symptoms_today',
      text: '–°–∏–º–ø—Ç–æ–º—ã —Å–µ–≥–æ–¥–Ω—è',
      prompt: '–†–∞—Å—Å–∫–∞–∂–∏ –æ –º–æ–∏—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
      icon: 'üìä'
    },
    {
      id: 'sleep_advice',
      text: '–£–ª—É—á—à–∏—Ç—å —Å–æ–Ω',
      prompt: '–ö–∞–∫ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–Ω–∞ –≤–æ –≤—Ä–µ–º—è –º–µ–Ω–æ–ø–∞—É–∑—ã?',
      icon: 'üò¥'
    },
    {
      id: 'hot_flashes',
      text: '–°–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –ø—Ä–∏–ª–∏–≤–∞–º–∏',
      prompt: '–ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –ø—Ä–∏–ª–∏–≤–∞–º–∏? –î–∞–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã',
      icon: 'üî•'
    },
    {
      id: 'mood_support',
      text: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è',
      prompt: '–ß—É–≤—Å—Ç–≤—É—é —É–ø–∞–¥–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?',
      icon: 'üíù'
    },
    {
      id: 'nutrition',
      text: '–ü–∏—Ç–∞–Ω–∏–µ –ø—Ä–∏ –º–µ–Ω–æ–ø–∞—É–∑–µ',
      prompt: '–ö–∞–∫–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–∏ –º–µ–Ω–æ–ø–∞—É–∑–µ?',
      icon: 'ü•ó'
    },
    {
      id: 'exercise',
      text: '–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      prompt: '–ö–∞–∫–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—Ç –≤–æ –≤—Ä–µ–º—è –º–µ–Ω–æ–ø–∞—É–∑—ã?',
      icon: 'üèÉ‚Äç‚ôÄÔ∏è'
    }
  ];

  useEffect(() => {
    loadChatHistory();
    scrollToBottom();
  }, []);

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  useEffect(() => {
    if (messages.length === 0 && !isInitialized) {
      initializeChat();
    }
  }, [messages, isInitialized]);

  const loadChatHistory = () => {
    const saved = localStorage.getItem(`ai_chat_${user?.id}`);
    if (saved) {
      setMessages(JSON.parse(saved));
    }
    setIsInitialized(true);
  };

  const saveChatHistory = (newMessages: ChatMessage[]) => {
    localStorage.setItem(`ai_chat_${user?.id}`, JSON.stringify(newMessages));
  };

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const initializeChat = () => {
    const welcomeMessage: ChatMessage = {
      id: Date.now().toString(),
      type: 'ai',
      content: `–ü—Ä–∏–≤–µ—Ç, ${user?.firstName}! üëã –Ø Eva AI - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–µ–Ω–æ–ø–∞—É–∑—ã –∏ –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è.\n\n–Ø –∑–Ω–∞—é –æ –≤–∞—à–∏—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö –∏ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Å —Å–æ–≤–µ—Ç–∞–º–∏, –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã. –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–∞?`,
      timestamp: new Date().toISOString()
    };

    setMessages([welcomeMessage]);
    saveChatHistory([welcomeMessage]);
  };

  const getUserContext = () => {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    const onboardingData = (user as any)?.onboardingData || {};
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤
    const symptomEntries = JSON.parse(localStorage.getItem(`symptom_entries_${user?.id}`) || '[]');
    const recentEntries = symptomEntries.slice(0, 7); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π

    return {
      age: onboardingData.basicInfo?.age,
      hasStoppedPeriods: onboardingData.basicInfo?.hasStoppedPeriods,
      currentSymptoms: onboardingData.symptoms || {},
      goals: onboardingData.goals || [],
      recentSymptoms: recentEntries
    };
  };

  const generateAIResponse = async (userMessage: string): Promise<string> => {
    const context = getUserContext();
    
    // –ò–º–∏—Ç–∞—Ü–∏—è API –≤—ã–∑–æ–≤–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    return new Promise((resolve) => {
      setTimeout(() => {
        let response = '';

        // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        const lowerMessage = userMessage.toLowerCase();

        if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π')) {
          response = `–ü—Ä–∏–≤–µ—Ç! –†–∞–¥–∞ –≤–∞—Å –≤–∏–¥–µ—Ç—å —Å–Ω–æ–≤–∞. –ö–∞–∫ –¥–µ–ª–∞? –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –º–æ–≥—É –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –Ω–µ–¥–∞–≤–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º—ã –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –º–µ–Ω–æ–ø–∞—É–∑–µ.`;
        }
        else if (lowerMessage.includes('—Å–∏–º–ø—Ç–æ–º') && lowerMessage.includes('—Å–µ–≥–æ–¥–Ω—è')) {
          const today = new Date().toISOString().split('T')[0];
          const todayEntry = context.recentSymptoms.find((entry: any) => entry.date === today);
          
          if (todayEntry) {
            response = `–Ø –≤–∏–∂—É, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –≤—ã –æ—Ç–º–µ—Ç–∏–ª–∏:\n\n`;
            if (todayEntry.hotFlashes?.count > 0) {
              response += `üî• –ü—Ä–∏–ª–∏–≤—ã: ${todayEntry.hotFlashes.count} —Ä–∞–∑\n`;
            }
            if (todayEntry.nightSweats?.occurred) {
              response += `üí¶ –ù–æ—á–Ω–∞—è –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å\n`;
            }
            if (todayEntry.sleep?.quality <= 2) {
              response += `üò¥ –ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º\n`;
            }
            if (todayEntry.mood?.overall <= 2) {
              response += `üòî –°–Ω–∏–∂–µ–Ω–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n`;
            }
            response += `\n–†–µ–∫–æ–º–µ–Ω–¥—É—é —Å–µ–≥–æ–¥–Ω—è:\n- –ë–æ–ª—å—à–µ –æ—Ç–¥—ã—Ö–∞—Ç—å\n- –ü–∏—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã\n- –ò–∑–±–µ–≥–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –ø—Ä–∏–ª–∏–≤–æ–≤\n- –ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è`;
          } else {
            response = `–Ø –Ω–µ –≤–∏–∂—É –∑–∞–ø–∏—Å–µ–π –æ —Å–∏–º–ø—Ç–æ–º–∞—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è. –†–µ–∫–æ–º–µ–Ω–¥—É—é –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç—Ä–µ–∫–µ—Ä —Å–∏–º–ø—Ç–æ–º–æ–≤, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –¥–∞—Ç—å –±–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã. –ö–∞–∫ –≤—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ?`;
          }
        }
        else if (lowerMessage.includes('–ø—Ä–∏–ª–∏–≤')) {
          response = `–ü—Ä–∏–ª–∏–≤—ã - –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö —á–∞—Å—Ç—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤ –º–µ–Ω–æ–ø–∞—É–∑—ã. –í–æ—Ç —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç:\n\nüå°Ô∏è **–ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å:**\n- –ì–ª—É–±–æ–∫–æ–µ –º–µ–¥–ª–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ\n- –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ–µ –ø–∏—Ç—å–µ\n- –õ–µ–≥–∫–∞—è –æ–¥–µ–∂–¥–∞ —Å–ª–æ—è–º–∏\n- –í–µ–Ω—Ç–∏–ª—è—Ç–æ—Ä –∏–ª–∏ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–µ –º–µ—Å—Ç–æ\n\nüçÉ **–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞:**\n- –ò–∑–±–µ–≥–∞–π—Ç–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ (–æ—Å—Ç—Ä–æ–µ, –∞–ª–∫–æ–≥–æ–ª—å, —Å—Ç—Ä–µ—Å—Å)\n- –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n- –ó–¥–æ—Ä–æ–≤—ã–π —Å–æ–Ω\n- –¢–µ—Ö–Ω–∏–∫–∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏\n\n–ï—Å–ª–∏ –ø—Ä–∏–ª–∏–≤—ã —Å–∏–ª—å–Ω–æ –±–µ—Å–ø–æ–∫–æ—è—Ç, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±—Å—É–¥–∏—Ç–µ —Å –≤—Ä–∞—á–æ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ª–µ—á–µ–Ω–∏—è.`;
        }
        else if (lowerMessage.includes('—Å–æ–Ω') || lowerMessage.includes('—Å–ø–∞—Ç—å')) {
          response = `–ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º –≤–æ –≤—Ä–µ–º—è –º–µ–Ω–æ–ø–∞—É–∑—ã –æ—á–µ–Ω—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n\nüåô **–ì–∏–≥–∏–µ–Ω–∞ —Å–Ω–∞:**\n- –õ–æ–∂–∏—Ç–µ—Å—å –∏ –≤—Å—Ç–∞–≤–∞–π—Ç–µ –≤ –æ–¥–Ω–æ –≤—Ä–µ–º—è\n- –ü—Ä–æ—Ö–ª–∞–¥–Ω–∞—è —Å–ø–∞–ª—å–Ω—è (16-19¬∞C)\n- –¢–µ–º–Ω—ã–µ —à—Ç–æ—Ä—ã –∏–ª–∏ –º–∞—Å–∫–∞ –¥–ª—è —Å–Ω–∞\n- –£–±—Ä–∞—Ç—å –≥–∞–¥–∂–µ—Ç—ã –∑–∞ —á–∞—Å –¥–æ —Å–Ω–∞\n\nüßò‚Äç‚ôÄÔ∏è **–†–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ:**\n- –ú–µ–¥–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Å–Ω–æ–º\n- –¢–µ–ø–ª–∞—è –≤–∞–Ω–Ω–∞ —Å –ª–∞–≤–∞–Ω–¥–æ–π\n- –ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏\n- –î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n\n‚òï **–ò–∑–±–µ–≥–∞—Ç—å:**\n- –ö–æ—Ñ–µ–∏–Ω –ø–æ—Å–ª–µ 14:00\n- –ë–æ–ª—å—à–∏–µ –ø–æ—Ä—Ü–∏–∏ –µ–¥—ã –Ω–∞ –Ω–æ—á—å\n- –ê–ª–∫–æ–≥–æ–ª—å\n- –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤–µ—á–µ—Ä–æ–º`;
        }
        else if (lowerMessage.includes('–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ') || lowerMessage.includes('–¥–µ–ø—Ä–µ—Å—Å') || lowerMessage.includes('—Ç—Ä–µ–≤–æ–≥')) {
          response = `–ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –º–µ–Ω–æ–ø–∞—É–∑—ã - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∏ –≤—ã –Ω–µ –æ–¥–∏–Ω–æ–∫–∏ üíú\n\nü§ó **–ß—Ç–æ –ø–æ–º–æ–∂–µ—Ç:**\n- –†–µ–≥—É–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n- –û–±—â–µ–Ω–∏–µ —Å –±–ª–∏–∑–∫–∏–º–∏ –ª—é–¥—å–º–∏\n- –•–æ–±–±–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ\n- –î–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å–æ–Ω\n- –ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ\n\nüÜò **–ö–æ–≥–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É:**\n- –î–µ–ø—Ä–µ—Å—Å–∏—è –¥–ª–∏—Ç—Å—è –±–æ–ª–µ–µ 2 –Ω–µ–¥–µ–ª—å\n- –ú—ã—Å–ª–∏ –æ —Å–∞–º–æ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–∏\n- –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–±—ã—á–Ω—ã–µ –¥–µ–ª–∞\n- –ü–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏\n\n–ü–æ–º–Ω–∏—Ç–µ: –ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ - —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫ —Å–∏–ª—ã, –∞ –Ω–µ —Å–ª–∞–±–æ—Å—Ç–∏.`;
        }
        else if (lowerMessage.includes('–ø–∏—Ç–∞–Ω–∏–µ') || lowerMessage.includes('–¥–∏–µ—Ç–∞') || lowerMessage.includes('–µ–¥–∞')) {
          response = `–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –º–æ–∂–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –æ–±–ª–µ–≥—á–∏—Ç—å —Å–∏–º–ø—Ç–æ–º—ã –º–µ–Ω–æ–ø–∞—É–∑—ã:\n\nü•ó **–í–∫–ª—é—á–∏—Ç—å –≤ —Ä–∞—Ü–∏–æ–Ω:**\n- –§–∏—Ç–æ—ç—Å—Ç—Ä–æ–≥–µ–Ω—ã (—Å–æ—è, —Å–µ–º–µ–Ω–∞ –ª—å–Ω–∞)\n- –ö–∞–ª—å—Ü–∏–π –∏ –≤–∏—Ç–∞–º–∏–Ω D (–º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –∑–µ–ª–µ–Ω—å)\n- –û–º–µ–≥–∞-3 (—Ä—ã–±–∞, –æ—Ä–µ—Ö–∏, –∞–≤–æ–∫–∞–¥–æ)\n- –¶–µ–ª—å–Ω—ã–µ –∑–µ—Ä–Ω–∞ –∏ –∫–ª–µ—Ç—á–∞—Ç–∫–∞\n- –ê–Ω—Ç–∏–æ–∫—Å–∏–¥–∞–Ω—Ç—ã (—è–≥–æ–¥—ã, –æ–≤–æ—â–∏)\n\n‚ùå **–û–≥—Ä–∞–Ω–∏—á–∏—Ç—å:**\n- –†–∞—Ñ–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∞—Ö–∞—Ä\n- –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã\n- –ò–∑–±—ã—Ç–æ–∫ –∫–æ—Ñ–µ–∏–Ω–∞\n- –û—Å—Ç—Ä—É—é –∏ –∂–∏—Ä–Ω—É—é –ø–∏—â—É\n- –ê–ª–∫–æ–≥–æ–ª—å\n\nüí° **–°–æ–≤–µ—Ç:** –í–µ–¥–∏—Ç–µ –ø–∏—â–µ–≤–æ–π –¥–Ω–µ–≤–Ω–∏–∫, —á—Ç–æ–±—ã –≤—ã—è–≤–∏—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã —Å–∏–º–ø—Ç–æ–º–æ–≤.`;
        }
        else if (lowerMessage.includes('—É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è') || lowerMessage.includes('—Å–ø–æ—Ä—Ç') || lowerMessage.includes('—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫')) {
          response = `–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - –≤–∞—à –ª—É—á—à–∏–π –¥—Ä—É–≥ –≤–æ –≤—Ä–µ–º—è –º–µ–Ω–æ–ø–∞—É–∑—ã! üí™\n\nüèÉ‚Äç‚ôÄÔ∏è **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≤–∏–¥—ã:**\n- –ö–∞—Ä–¥–∏–æ 150 –º–∏–Ω/–Ω–µ–¥–µ–ª—é (—Ö–æ–¥—å–±–∞, –ø–ª–∞–≤–∞–Ω–∏–µ)\n- –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ 2-3 —Ä–∞–∑–∞/–Ω–µ–¥–µ–ª—é\n- –ô–æ–≥–∞ –∏–ª–∏ –ø–∏–ª–∞—Ç–µ—Å –¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏\n- –¢–∞–Ω—Ü—ã –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è\n\n‚úÖ **–ü–æ–ª—å–∑–∞:**\n- –£–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–æ—Å—Ç–µ–π\n- –£–ª—É—á—à–µ–Ω–∏–µ —Å–Ω–∞\n- –°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è\n- –ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Å–∞\n- –°–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏–ª–∏–≤–æ–≤\n\n‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ù–∞—á–∏–Ω–∞–π—Ç–µ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–π—Ç–µ—Å—å —Å –≤—Ä–∞—á–æ–º –ø—Ä–∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö.`;
        }
        else if (lowerMessage.includes('–≤—Ä–∞—á') || lowerMessage.includes('–¥–æ–∫—Ç–æ—Ä')) {
          response = `–ö–æ–≥–¥–∞ —Å—Ç–æ–∏—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤—Ä–∞—á—É:\n\nüö® **–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:**\n- –ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏—è –ø–æ—Å–ª–µ –≥–æ–¥–∞ –±–µ–∑ –º–µ—Å—è—á–Ω—ã—Ö\n- –û—á–µ–Ω—å –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã\n- –î–µ–ø—Ä–µ—Å—Å–∏—è –∏–ª–∏ —Ç—Ä–µ–≤–æ–≥–∞\n- –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é\n- –ë–æ–ª–∏ –≤ –≥—Ä—É–¥–∏ –∏–ª–∏ –∫–æ—Å—Ç—è—Ö\n\nüë©‚Äç‚öïÔ∏è **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤–∏–∑–∏—Ç—É:**\n- –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ —Å–∏–º–ø—Ç–æ–º—ã –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ\n- –°–ø–∏—Å–æ–∫ –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤\n- –°–µ–º–µ–π–Ω—ã–π –∞–Ω–∞–º–Ω–µ–∑\n- –í–æ–ø—Ä–æ—Å—ã –æ –ó–ì–¢ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞—Ö\n\n–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Å—É–∂–¥–∞—Ç—å –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã - –≤—Ä–∞—á –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–π –ø–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è.`;
        }
        else if (lowerMessage.includes('–≤–µ—Å') || lowerMessage.includes('–ø–æ—Ö—É–¥')) {
          response = `–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤–µ—Å–∞ –≤–æ –≤—Ä–µ–º—è –º–µ–Ω–æ–ø–∞—É–∑—ã - —á–∞—Å—Ç–∞—è –ø—Ä–æ–±–ª–µ–º–∞. –ö–∞–∫ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è:\n\n‚öñÔ∏è **–ü—Ä–∏—á–∏–Ω—ã –Ω–∞–±–æ—Ä–∞ –≤–µ—Å–∞:**\n- –°–Ω–∏–∂–µ–Ω–∏–µ —ç—Å—Ç—Ä–æ–≥–µ–Ω–∞\n- –ó–∞–º–µ–¥–ª–µ–Ω–∏–µ –º–µ—Ç–∞–±–æ–ª–∏–∑–º–∞\n- –ü–æ—Ç–µ—Ä—è –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã\n- –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∂–∏—Ä–∞\n\nüéØ **–°—Ç—Ä–∞—Ç–µ–≥–∏–∏:**\n- –°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è –º—ã—à—Ü\n- –ë–µ–ª–æ–∫ –≤ –∫–∞–∂–¥–æ–º –ø—Ä–∏–µ–º–µ –ø–∏—â–∏\n- –ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ—Ä—Ü–∏–π\n- –î–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å–æ–Ω\n- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–µ—Å—Å–æ–º\n\nüö´ **–ò–∑–±–µ–≥–∞—Ç—å:**\n- –ñ–µ—Å—Ç–∫–∏—Ö –¥–∏–µ—Ç\n- –ü—Ä–æ–ø—É—Å–∫–∞ –ø—Ä–∏–µ–º–æ–≤ –ø–∏—â–∏\n- –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π\n\n–¢–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ—Å—Ç—å - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É!`;
        }
        else {
          response = `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! –Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –≤–æ–ø—Ä–æ—Å–∞—Ö –º–µ–Ω–æ–ø–∞—É–∑—ã –∏ –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è.\n\n–ú–æ–≥—É –ø–æ–º–æ—á—å —Å:\nüî• –ü—Ä–∏–ª–∏–≤–∞–º–∏ –∏ –Ω–æ—á–Ω–æ–π –ø–æ—Ç–ª–∏–≤–æ—Å—Ç—å—é\nüò¥ –ü—Ä–æ–±–ª–µ–º–∞–º–∏ —Å–Ω–∞\nüòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ–º –∏ —ç–º–æ—Ü–∏—è–º–∏\nü•ó –ü–∏—Ç–∞–Ω–∏–µ–º –∏ –≤–µ—Å–æ–º\nüèÉ‚Äç‚ôÄÔ∏è –§–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é\nüíä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ª–µ—á–µ–Ω–∏–∏\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–º—É –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å!`;
        }

        resolve(response);
      }, 1000 + Math.random() * 2000); // 1-3 —Å–µ–∫—É–Ω–¥—ã –∑–∞–¥–µ—Ä–∂–∫–∏
    });
  };

  const handleSendMessage = async (message: string = inputMessage) => {
    if (!message.trim()) return;

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      type: 'user',
      content: message,
      timestamp: new Date().toISOString()
    };

    const updatedMessages = [...messages, userMessage];
    setMessages(updatedMessages);
    setInputMessage('');
    setIsLoading(true);

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
    const typingMessage: ChatMessage = {
      id: 'typing',
      type: 'ai',
      content: '',
      timestamp: new Date().toISOString(),
      isTyping: true
    };

    setMessages([...updatedMessages, typingMessage]);

    try {
      const aiResponse = await generateAIResponse(message);
      
      const aiMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        type: 'ai',
        content: aiResponse,
        timestamp: new Date().toISOString()
      };

      const finalMessages = [...updatedMessages, aiMessage];
      setMessages(finalMessages);
      saveChatHistory(finalMessages);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ò–ò:', error);
      const errorMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        type: 'ai',
        content: '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.',
        timestamp: new Date().toISOString()
      };

      const finalMessages = [...updatedMessages, errorMessage];
      setMessages(finalMessages);
      saveChatHistory(finalMessages);
    } finally {
      setIsLoading(false);
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const clearChat = () => {
    setMessages([]);
    localStorage.removeItem(`ai_chat_${user?.id}`);
    initializeChat();
  };

  return (
    <PatientLayout title="bloom - –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫" breadcrumbs={breadcrumbs}>
      <div className="h-[calc(100vh-200px)] bloom-card flex flex-col">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex-shrink-0 p-6 border-b border-border">
          <div className="flex justify-between items-center">
            <div>
              <h1 className="text-2xl font-playfair font-bold text-foreground flex items-center">
                ü§ñ Eva AI
                <span className="ml-2 text-sm bg-green-100 text-green-800 px-2 py-1 rounded-full">
                  –æ–Ω–ª–∞–π–Ω
                </span>
              </h1>
              <p className="text-muted-foreground text-sm">
                –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–µ–Ω–æ–ø–∞—É–∑—ã
              </p>
            </div>
            
            <button
              onClick={clearChat}
              className="text-muted-foreground hover:text-foreground text-sm transition-colors"
            >
              –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç
            </button>
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        {messages.length <= 1 && (
          <div className="flex-shrink-0 p-4 border-b border-border bg-muted/30">
            <p className="text-sm text-muted-foreground mb-3">–ë—ã—Å—Ç—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</p>
            <div className="flex flex-wrap gap-2">
              {quickActions.map(action => (
                <button
                  key={action.id}
                  onClick={() => handleSendMessage(action.prompt)}
                  className="flex items-center bg-primary/10 hover:bg-primary/20 text-primary px-3 py-2 rounded-lg text-sm transition-colors"
                >
                  <span className="mr-2">{action.icon}</span>
                  {action.text}
                </button>
              ))}
            </div>
          </div>
        )}

        {/* –û–±–ª–∞—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–π */}
        <div className="flex-1 overflow-y-auto p-4">
          <div className="space-y-4">
            {messages.map(message => (
              <div
                key={message.id}
                className={cn(
                  "flex",
                  message.type === 'user' ? 'justify-end' : 'justify-start'
                )}
              >
                <div
                  className={cn(
                    "max-w-xs lg:max-w-md px-4 py-2 rounded-lg",
                    message.type === 'user'
                      ? 'bg-primary text-primary-foreground'
                      : 'bg-muted text-foreground'
                  )}
                >
                  {message.isTyping ? (
                    <div className="flex items-center space-x-1">
                      <div className="flex space-x-1">
                        <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce"></div>
                        <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                        <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                      </div>
                      <span className="text-sm text-muted-foreground ml-2">Eva –ø–µ—á–∞—Ç–∞–µ—Ç...</span>
                    </div>
                  ) : (
                    <div className="whitespace-pre-wrap">{message.content}</div>
                  )}
                  
                  <div
                    className={cn(
                      "text-xs mt-1",
                      message.type === 'user' ? 'text-primary-foreground/70' : 'text-muted-foreground'
                    )}
                  >
                    {new Date(message.timestamp).toLocaleTimeString('ru-RU', {
                      hour: '2-digit',
                      minute: '2-digit'
                    })}
                  </div>
                </div>
              </div>
            ))}
            <div ref={messagesEndRef} />
          </div>
        </div>

        {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
        <div className="flex-shrink-0 p-4 border-t border-border">
          <div className="flex space-x-4">
            <input
              ref={inputRef}
              type="text"
              value={inputMessage}
              onChange={(e) => setInputMessage(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ –º–µ–Ω–æ–ø–∞—É–∑–µ..."
              disabled={isLoading}
              className="flex-1 p-3 border border-border rounded-lg focus:ring-2 focus:ring-ring focus:border-transparent disabled:opacity-50 bg-background"
            />
            <button
              onClick={() => handleSendMessage()}
              disabled={isLoading || !inputMessage.trim()}
              className={cn(
                "px-6 py-3 rounded-lg font-medium transition-colors",
                isLoading || !inputMessage.trim()
                  ? "bg-muted text-muted-foreground cursor-not-allowed"
                  : "bg-primary text-primary-foreground hover:bg-primary/90"
              )}
            >
              {isLoading ? '...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
            </button>
          </div>
          
          <div className="mt-2">
            <p className="text-xs text-muted-foreground text-center">
              Eva AI –º–æ–∂–µ—Ç –¥–æ–ø—É—Å–∫–∞—Ç—å –æ—à–∏–±–∫–∏. –í–∞–∂–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ–±—Å—É–∂–¥–∞–π—Ç–µ —Å –≤—Ä–∞—á–æ–º.
            </p>
          </div>
        </div>
      </div>
    </PatientLayout>
  );
};

export default AIChat;

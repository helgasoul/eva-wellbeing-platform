
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '@/context/AuthContext';
import { generateId, showNotification } from '@/utils/dataUtils';
import { PatientLayout } from '@/components/layout/PatientLayout';
import { OnboardingProgress } from '@/components/onboarding/OnboardingProgress';
import { StepWrapper } from '@/components/onboarding/StepWrapper';
import { OnboardingResults } from '@/components/onboarding/OnboardingResults';
import { WelcomeStep } from '@/components/onboarding/steps/WelcomeStep';
import { BasicInfoStep } from '@/components/onboarding/steps/BasicInfoStep';
import { MenstrualHistoryStep } from '@/components/onboarding/steps/MenstrualHistoryStep';
import { SymptomsStep } from '@/components/onboarding/steps/SymptomsStep';
import { MedicalHistoryStep } from '@/components/onboarding/steps/MedicalHistoryStep';
import { LifestyleStep } from '@/components/onboarding/steps/LifestyleStep';
import { GoalsStep } from '@/components/onboarding/steps/GoalsStep';
import GeolocationStep from '@/components/onboarding/steps/GeolocationStep';
import { OnboardingData } from '@/types/onboarding';
import { weatherService } from '@/services/weatherService';
import { supabase } from '@/integrations/supabase/client';
import { detectMenopausePhase } from '@/utils/menopausePhaseDetector';
import { generateRecommendations } from '@/utils/personalizedRecommendations';
import { toast } from '@/hooks/use-toast';
import { DataBridge, OnboardingPresets } from '@/services/DataBridge';
import { onboardingService } from '@/services/onboardingService';
import { migrateOnboardingData } from '@/utils/onboardingMigration';

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏–∑ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ - –¥–µ–ª–∞–µ–º 7 —à–∞–≥–æ–≤
const TOTAL_STEPS = 7;
const STORAGE_KEY = 'bloom-onboarding-data';

// –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —à–∞–≥–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó
const ONBOARDING_STEPS = [
  {
    step: 1,
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å',
    component: 'WelcomeStep',
    isRequired: true,
    dataKey: null
  },
  {
    step: 2, 
    title: '–ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
    component: 'BasicInfoStep',
    isRequired: true,
    dataKey: 'basicInfo'
  },
  {
    step: 3,
    title: '–ò—Å—Ç–æ—Ä–∏—è –º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–æ–≥–æ —Ü–∏–∫–ª–∞', 
    component: 'MenstrualHistoryStep',
    isRequired: true,
    dataKey: 'menstrualHistory'
  },
  {
    step: 4,
    title: '–¢–µ–∫—É—â–∏–µ —Å–∏–º–ø—Ç–æ–º—ã –º–µ–Ω–æ–ø–∞—É–∑—ã',
    component: 'SymptomsStep',
    isRequired: true,
    dataKey: 'symptoms'
  },
  {
    step: 5,
    title: '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è',
    component: 'MedicalHistoryStep',
    isRequired: true,
    dataKey: 'medicalHistory'
  },
  {
    step: 6,
    title: '–û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏',
    component: 'LifestyleStep',
    isRequired: true,
    dataKey: 'lifestyle'
  },
  {
    step: 7,
    title: '–¶–µ–ª–∏ –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã', 
    component: 'GoalsStep',
    isRequired: true,
    dataKey: 'goals'
  }
];

const stepTitles = ONBOARDING_STEPS.map(step => step.title);

const PatientOnboarding = () => {
  const [currentStep, setCurrentStep] = useState(1);
  const [formData, setFormData] = useState<OnboardingData>({});
  const [isLoading, setIsLoading] = useState(false);
  const [showResults, setShowResults] = useState(false);
  const [phaseResult, setPhaseResult] = useState(null);
  const [recommendations, setRecommendations] = useState(null);
  const [onboardingPresets, setOnboardingPresets] = useState<OnboardingPresets | null>(null);
  const [dataLoadingStatus, setDataLoadingStatus] = useState({
    registration: false,
    onboarding: false,
    dataBridge: false
  });
  
  const { user, completeOnboarding, updateUser, saveUserData, loadUserData } = useAuth();
  const navigate = useNavigate();

  // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  useEffect(() => {
    if (!user) return;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (user.onboardingCompleted) {
      console.log('‚úÖ User has already completed onboarding, redirecting to dashboard');
      navigate('/patient/dashboard', { replace: true });
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
    const migrationResult = migrateOnboardingData();
    if (migrationResult.migrationPerformed && migrationResult.onboardingCompleted) {
      console.log('‚úÖ Migrated onboarding completion from localStorage');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ AuthContext
      updateUser({ 
        onboardingCompleted: true,
        onboardingData: migrationResult.onboardingData
      });
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
      toast({
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ!',
        description: '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã',
      });
      
      navigate('/patient/dashboard', { replace: true });
      return;
    }

    console.log('üîÑ User needs to complete onboarding');
  }, [user, navigate, updateUser]);

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    loadOnboardingData();
  }, [user]);

  const loadOnboardingData = () => {
    try {
      // 1. –î–∞–Ω–Ω—ã–µ –∏–∑ AuthContext (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
      const userData = user;
      
      // 2. –î–∞–Ω–Ω—ã–µ –∏–∑ localStorage
      const registrationData = JSON.parse(localStorage.getItem('registration_data') || '{}');
      const onboardingPresets = JSON.parse(localStorage.getItem('onboarding_presets') || '{}');
      const savedProgress = JSON.parse(localStorage.getItem(`onboarding_progress_${user?.id}`) || '{}');
      
      // 3. –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
      const mergedData = {
        // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        firstName: userData?.firstName || registrationData.firstName,
        lastName: userData?.lastName || registrationData.lastName,
        email: userData?.email || registrationData.email,
        selectedPersona: (userData as any)?.selectedPersona || onboardingPresets.persona,
        
        // –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
        ...savedProgress,
        
        // –ü—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä—Å–æ–Ω—ã
        ...getPersonaDefaults(onboardingPresets.persona)
      };
      
      // 4. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —Ç–µ–∫—É—â–∏–π —à–∞–≥
      setFormData(prev => ({ ...prev, ...mergedData }));
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω
      if (savedProgress.currentStep && !savedProgress.completed) {
        setCurrentStep(savedProgress.currentStep);
      } else if (onboardingPresets.startStep) {
        setCurrentStep(onboardingPresets.startStep);
      }
      
      console.log('–î–∞–Ω–Ω—ã–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', mergedData);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–µ—Ñ–æ–ª—Ç–æ–≤:
  const getPersonaDefaults = (persona: string) => {
    switch(persona) {
      case 'first_signs':
        return {
          expectedSymptoms: ['irregular_periods', 'mood_swings', 'sleep_issues'],
          phase: 'perimenopause'
        };
      case 'active_phase': 
        return {
          expectedSymptoms: ['hot_flashes', 'night_sweats', 'mood_changes'],
          phase: 'menopause'
        };
      case 'postmenopause':
        return {
          expectedSymptoms: ['bone_density', 'heart_health', 'cognitive_health'],
          phase: 'postmenopause'
        };
      default: return {};
    }
  };

  // ‚úÖ –£–õ–£–ß–®–ï–ù–ù–û–ï –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï: –ß–µ—Ä–µ–∑ DataBridge —Å —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤ Supabase
  useEffect(() => {
    const saveOnboardingData = async () => {
      if (!user?.id || Object.keys(formData).length === 0) return;
      
      try {
        // 1. –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —á–µ—Ä–µ–∑ DataBridge
        await saveUserData('onboarding_progress', {
          data: formData,
          currentStep,
          timestamp: new Date().toISOString()
        });

        // 2. –†–µ–∑–µ—Ä–≤–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
        localStorage.setItem(STORAGE_KEY, JSON.stringify(formData));
        
        // 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π —à–∞–≥ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ Supabase
        const stepMapping = [
          { key: 'basicInfo', stepNumber: 2, stepName: 'basicInfo' },
          { key: 'menstrualHistory', stepNumber: 3, stepName: 'menstrualHistory' },
          { key: 'symptoms', stepNumber: 4, stepName: 'symptoms' },
          { key: 'medicalHistory', stepNumber: 5, stepName: 'medicalHistory' },
          { key: 'lifestyle', stepNumber: 6, stepName: 'lifestyle' },
          { key: 'goals', stepNumber: 7, stepName: 'goals' }
        ];
        
        // 4. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º UI)
        const currentStepData = stepMapping.find(s => s.stepNumber === currentStep);
        if (currentStepData && formData[currentStepData.key]) {
          onboardingService.saveStep(
            user.id,
            currentStepData.stepNumber,
            currentStepData.stepName,
            formData[currentStepData.key]
          ).catch(error => {
            console.warn('‚ö†Ô∏è Supabase save failed, but data saved locally:', error);
          });
        }
        
        console.log('üíæ Onboarding data auto-saved:', {
          step: currentStep,
          dataKeys: Object.keys(formData),
          timestamp: new Date().toISOString()
        });
        
      } catch (error) {
        console.error('Error saving onboarding data:', error);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
        if (!localStorage.getItem(STORAGE_KEY)) {
          showNotification('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞', 'warning');
        }
      }
    };
    
    // –î–µ–±–∞—É–Ω—Å–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    const timeoutId = setTimeout(saveOnboardingData, 1000);
    return () => clearTimeout(timeoutId);
  }, [formData, currentStep, user?.id, saveUserData]);

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
  const updateFormData = (stepData: Partial<OnboardingData>) => {
    setFormData(prev => {
      const newData = { ...prev, ...stepData };
      console.log('üìù Form data updated:', {
        step: currentStep,
        updated: Object.keys(stepData),
        newKeys: Object.keys(newData)
      });
      return newData;
    });
  };

  const handleNext = () => {
    if (currentStep < TOTAL_STEPS) {
      setCurrentStep(prev => prev + 1);
    } else {
      handleComplete();
    }
  };

  const handlePrev = () => {
    if (currentStep > 1) {
      setCurrentStep(prev => prev - 1);
    }
  };

  const handleComplete = async () => {
    setIsLoading(true);
    
    try {
      // Detect menopause phase
      const phase = detectMenopausePhase(formData);
      
      // Generate recommendations
      const recs = generateRecommendations(
        phase,
        formData.symptoms!,
        formData.lifestyle!
      );

      setPhaseResult(phase);
      setRecommendations(recs);
      setShowResults(true);

      toast({
        title: '–û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!',
        description: '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.',
      });

    } catch (error) {
      console.error('Error completing onboarding:', error);
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
        variant: 'destructive',
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleOnboardingComplete = async () => {
    try {
      console.log('üéØ Starting onboarding completion process', {
        userId: user?.id,
        hasPhaseResult: !!phaseResult,
        hasRecommendations: !!recommendations,
        hasFormData: !!formData
      });

      // Clear forced onboarding flag
      sessionStorage.removeItem('forcedOnboarding');
      console.log('üßπ Cleared forced onboarding flag');

      // ‚úÖ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ AuthContext
      const onboardingSummary = {
        phaseResult,
        recommendations,
        formData,
        completedAt: new Date().toISOString()
      };
      
      // 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ AuthContext
      await saveUserData('onboarding_data', {
        ...formData,
        phaseResult,
        recommendations,
        completedAt: new Date().toISOString(),
        version: '1.0'
      });

      // 2. –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
      await updateUser({ 
        onboardingCompleted: true,
        onboardingData: onboardingSummary
      });
      
      // 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
      localStorage.setItem('onboardingCompleted', 'true');
      localStorage.setItem('onboardingData', JSON.stringify(onboardingSummary));

      // 4. –ò—Å–ø–æ–ª—å–∑—É–µ–º completeOnboarding –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑—É
      await completeOnboarding(onboardingSummary);

      console.log('‚úÖ Onboarding completed successfully, redirecting to profile setup');
      
      toast({
        title: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!',
        description: '–ê–Ω–∫–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ—Ñ–∏–ª—è.',
      });

      // 5. –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–æ—Ñ–∏–ª—è (–≥–µ–æ–ª–æ–∫–∞—Ü–∏—è)
      navigate('/patient/profile-setup', { replace: true });

    } catch (error) {
      console.error('‚ùå Error completing onboarding:', error);
      toast({
        title: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
        description: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
        variant: 'destructive',
      });
    }
  };


  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è 7-—à–∞–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  const canGoNext = () => {
    console.log(`üîç Validating step ${currentStep}:`, {
      step: currentStep,
      formData: formData,
      stepName: ONBOARDING_STEPS[currentStep - 1]?.title
    });

    switch (currentStep) {
      case 1:
        return true; // Welcome step
      case 2:
        // BasicInfoStep - —Ç—Ä–µ–±—É—é—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        const basicValid = formData.basicInfo && 
               formData.basicInfo.age > 0 && 
               formData.basicInfo.height > 0 && 
               formData.basicInfo.weight > 0;
        console.log(`üìä BasicInfo validation:`, { basicValid, data: formData.basicInfo });
        return basicValid;
      case 3:
        // MenstrualHistoryStep - —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä–≤–æ–π –º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏–∏
        const menstrualValid = formData.menstrualHistory && 
               formData.menstrualHistory.ageOfFirstPeriod > 0;
        console.log(`ü©∏ MenstrualHistory validation:`, { menstrualValid, data: formData.menstrualHistory });
        return menstrualValid;
      case 4:
        // SymptomsStep - —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º –µ—Å–ª–∏:
        // 1. –ó–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —á–∞—Å—Ç–æ—Ç–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤ (–≤–∫–ª—é—á–∞—è "never") –ò–õ–ò
        // 2. –í—ã–±—Ä–∞–Ω–æ "–Ω–∏—á–µ–≥–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ" –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö/–∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤
        const symptomsValid = formData.symptoms && (
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–æ—Ç–Ω—ã–µ —Å–∏–º–ø—Ç–æ–º—ã
          (formData.symptoms.hotFlashes?.frequency !== undefined ||
           formData.symptoms.nightSweats?.frequency !== undefined ||
           formData.symptoms.sleepProblems?.frequency !== undefined ||
           formData.symptoms.moodChanges?.frequency !== undefined) ||
          // –ò–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Å–∏–º–ø—Ç–æ–º–∞—Ö (–≤–∫–ª—é—á–∞—è "none_of_the_above")
          (formData.symptoms.physicalSymptoms?.length > 0 ||
           formData.symptoms.cognitiveSymptoms?.length > 0)
        );
        console.log(`üò∑ Symptoms validation:`, { 
          symptomsValid, 
          hasFrequencyData: !!(formData.symptoms?.hotFlashes?.frequency !== undefined ||
                              formData.symptoms?.nightSweats?.frequency !== undefined ||
                              formData.symptoms?.sleepProblems?.frequency !== undefined ||
                              formData.symptoms?.moodChanges?.frequency !== undefined),
          hasSymptomArrays: !!(formData.symptoms?.physicalSymptoms?.length > 0 ||
                              formData.symptoms?.cognitiveSymptoms?.length > 0),
          data: formData.symptoms 
        });
        return symptomsValid;
      case 5:
        // MedicalHistoryStep - –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ (–¥–∞–∂–µ –ø—É—Å—Ç—ã–µ –º–∞—Å—Å–∏–≤—ã)
        const medicalValid = formData.medicalHistory !== undefined;
        console.log(`üè• MedicalHistory validation:`, { medicalValid, data: formData.medicalHistory });
        return medicalValid;
      case 6:
        // LifestyleStep - —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –¥–µ—Ç–∞–ª–∏, –µ—Å–ª–∏ –≤—ã–±—Ä–∞–ª –±–∞–∑–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        const lifestyleValid = formData.lifestyle && 
               formData.lifestyle.exerciseFrequency !== undefined &&
               formData.lifestyle.dietType !== undefined &&
               formData.lifestyle.smokingStatus !== undefined &&
               formData.lifestyle.alcoholConsumption !== undefined &&
               formData.lifestyle.stressLevel !== undefined &&
               formData.lifestyle.sleepHours !== undefined;
        console.log(`üèÉ‚Äç‚ôÄÔ∏è Lifestyle validation:`, { lifestyleValid, data: formData.lifestyle });
        return lifestyleValid;
      case 7:
        // GoalsStep - —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–±–æ—Ä —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–π —Ü–µ–ª–∏ –∏–ª–∏ –∑–∞–±–æ—Ç—ã
        const goalsValid = formData.goals && (
          (formData.goals.primaryConcerns && formData.goals.primaryConcerns.length > 0) ||
          (formData.goals.goals && formData.goals.goals.length > 0)
        );
        console.log(`üéØ Goals validation:`, { goalsValid, data: formData.goals });
        return goalsValid;
      default:
        console.warn(`‚ö†Ô∏è Unknown step ${currentStep}`);
        return false;
    }
  };

  // Show the onboarding results without geolocation step
  if (showResults) {
    return (
      <PatientLayout>
        <OnboardingResults
          phaseResult={phaseResult}
          recommendations={recommendations}
          onboardingData={formData}
          onComplete={handleOnboardingComplete}
        />
      </PatientLayout>
    );
  }

  return (
    <PatientLayout>
      <div className="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50">
        <div className="max-w-4xl mx-auto px-4 py-8">
          <OnboardingProgress 
            currentStep={currentStep} 
            totalSteps={TOTAL_STEPS}
            stepTitles={stepTitles}
          />
          
          <div className="space-y-6"
          >
            {/* –®–∞–≥ 1: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å */}
            {currentStep === 1 && (
              <WelcomeStep 
                onNext={handleNext}
              />
            )}

            {/* –®–∞–≥–∏ 2-7: –° –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π */}
            {currentStep > 1 && (
              <div className="space-y-6">
                <div className="bloom-card p-6">
                  <h2 className="text-2xl font-playfair font-bold text-foreground mb-6">
                    {stepTitles[currentStep - 1]}
                  </h2>
                  
                  {/* –®–∞–≥ 2: –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  {currentStep === 2 && (
                    <BasicInfoStep
                      data={formData.basicInfo}
                      onChange={(data) => updateFormData({ basicInfo: data })}
                    />
                  )}

                  {/* –®–∞–≥ 3: –ú–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è */}
                  {currentStep === 3 && (
                    <MenstrualHistoryStep
                      data={formData.menstrualHistory}
                      onChange={(data) => updateFormData({ menstrualHistory: data })}
                    />
                  )}

                  {/* –®–∞–≥ 4: –°–∏–º–ø—Ç–æ–º—ã */}
                  {currentStep === 4 && (
                    <SymptomsStep
                      data={formData.symptoms}
                      onChange={(data) => updateFormData({ symptoms: data })}
                    />
                  )}

                  {/* –®–∞–≥ 5: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è */}
                  {currentStep === 5 && (
                    <MedicalHistoryStep
                      data={formData.medicalHistory}
                      onChange={(data) => updateFormData({ medicalHistory: data })}
                    />
                  )}

                  {/* –®–∞–≥ 6: –û–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ */}
                  {currentStep === 6 && (
                    <LifestyleStep
                      data={formData.lifestyle}
                      onChange={(data) => updateFormData({ lifestyle: data })}
                    />
                  )}

                  {/* –®–∞–≥ 7: –¶–µ–ª–∏ */}
                  {currentStep === 7 && (
                    <GoalsStep
                      data={formData.goals}
                      onChange={(data) => updateFormData({ goals: data })}
                    />
                  )}
                  
                  {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
                  <div className="flex justify-between mt-8">
                    <button
                      onClick={handlePrev}
                      disabled={currentStep === 1}
                      className="px-6 py-2 border border-muted-foreground/20 text-muted-foreground rounded-lg hover:bg-muted/50 disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      –ù–∞–∑–∞–¥
                    </button>
                    
                    <button
                      onClick={currentStep === TOTAL_STEPS ? handleComplete : handleNext}
                      disabled={!canGoNext()}
                      className="px-6 py-2 bloom-button disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      {isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : currentStep === TOTAL_STEPS ? '–ó–∞–≤–µ—Ä—à–∏—Ç—å' : '–î–∞–ª–µ–µ'}
                    </button>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </PatientLayout>
  );
};


// ‚úÖ –ù–û–í–û–ï: –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω—ã
const getPersonaTitle = (personaId: string) => {
  const titles = {
    'first_signs': '–ü–µ—Ä–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏',
    'active_phase': '–ê–∫—Ç–∏–≤–Ω–∞—è —Ñ–∞–∑–∞', 
    'postmenopause': '–ü–æ—Å—Ç–º–µ–Ω–æ–ø–∞—É–∑–∞'
  };
  return titles[personaId as keyof typeof titles] || '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å';
};

export default PatientOnboarding;
